{
  "name" : "Roo.state.Manager",
  "augments" : [],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "This is the global state manager. By default all components that are \"state aware\" check this class\nfor state information if you don't pass them a custom state provider. In order for this class\nto be useful, it must be initialized with a provider when your application initializes.\n <pre><code>\n// in your initialization function\ninit : function(){\n   Roo.state.Manager.setProvider(new Roo.state.CookieProvider());\n   ...\n   // supposed you have a {@link Roo.layout.Border}\n   var layout = new Roo.layout.Border(...);\n   layout.restoreState();\n   // or a {Roo.BasicDialog}\n   var dialog = new Roo.BasicDialog(...);\n   dialog.restoreState();\n </code></pre>",
  "isSingleton" : false,
  "isStatic" : true,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "Manager",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [],
  "methods" : [
    {
      "name" : "getProvider",
      "type" : "function",
      "desc" : "Gets the currently configured state provider",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Provider",
          "desc" : "The state provider"
        }
      ]
    },
    {
      "name" : "clear",
      "type" : "function",
      "desc" : "Clears a value from the state",
      "sig" : "(name)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String",
          "desc" : "The key name",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "get",
      "type" : "function",
      "desc" : "Returns the current value for a key",
      "sig" : "(name, defaultValue)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String",
          "desc" : "The key name",
          "isOptional" : false
        },
        {
          "name" : "defaultValue",
          "type" : "Mixed",
          "desc" : "The default value to return if the key lookup does not match",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Mixed",
          "desc" : "The state data"
        }
      ]
    },
    {
      "name" : "set",
      "type" : "function",
      "desc" : "Sets the value for a key",
      "sig" : "(name, value)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String",
          "desc" : "The key name",
          "isOptional" : false
        },
        {
          "name" : "value",
          "type" : "Mixed",
          "desc" : "The state data",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setProvider",
      "type" : "function",
      "desc" : "Configures the default state provider for your application",
      "sig" : "(stateProvider)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "stateProvider",
          "type" : "Provider",
          "desc" : "The state provider to set",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ],
  "events" : []
}