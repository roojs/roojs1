{
  "name" : "Roo.grid.ColumnModel",
  "augments" : [
    "Roo.util.Observable"
  ],
  "childClasses" : [],
  "desc" : "This is the default implementation of a ColumnModel used by the Grid. It defines\nthe columns in the grid.\n<br>Usage:<br>\n <pre><code>\n var colModel = new Roo.grid.ColumnModel([\n\t{header: \"Ticker\", width: 60, sortable: true, locked: true},\n\t{header: \"Company Name\", width: 150, sortable: true},\n\t{header: \"Market Cap.\", width: 100, sortable: true},\n\t{header: \"$ Sales\", width: 100, sortable: true, renderer: money},\n\t{header: \"Employees\", width: 100, sortable: true, resizable: false}\n ]);\n </code></pre>\n<p>\nThe config options listed for this class are options which may appear in each\nindividual column definition.\n<br/>RooJS Fix - column id's are not sequential but use Roo.id() - fixes bugs with layouts.",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "memberOf" : "ColumnModel",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "An Array of column config objects. See this class's\nconfig objects for details.",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [
    {
      "name" : "mdHeader",
      "type" : "String",
      "desc" : "Header at Bootsrap Medium width",
      "memberOf" : ""
    },
    {
      "name" : "editor",
      "type" : "Roo.grid.GridEditor",
      "desc" : "(Optional) For grid editors - returns the grid editor",
      "memberOf" : ""
    },
    {
      "name" : "cursor",
      "type" : "String",
      "desc" : "(Optional)",
      "memberOf" : ""
    },
    {
      "name" : "listeners",
      "type" : "Object",
      "desc" : "list of events and functions to call for this object, \nFor example :\n<pre><code>\n    listeners :  { \n       'click' : function(e) {\n           ..... \n        } ,\n        .... \n    } \n  </code></pre>",
      "memberOf" : "Roo.util.Observable"
    },
    {
      "name" : "smHeader",
      "type" : "String",
      "desc" : "Header at Bootsrap Small width",
      "memberOf" : ""
    },
    {
      "name" : "tooltip",
      "type" : "String",
      "desc" : "(Optional)",
      "memberOf" : ""
    },
    {
      "name" : "md",
      "type" : "Number",
      "desc" : "(Optional) can be '0' for hidden at this size (number less than 12)",
      "memberOf" : ""
    },
    {
      "name" : "align",
      "type" : "String",
      "desc" : "(Optional) Set the CSS text-align property of the column.  Defaults to undefined.",
      "memberOf" : ""
    },
    {
      "name" : "lgHeader",
      "type" : "String",
      "desc" : "Header at Bootsrap Large width",
      "memberOf" : ""
    },
    {
      "name" : "xlHeader",
      "type" : "String",
      "desc" : "Header at Bootsrap extra Large width",
      "memberOf" : ""
    },
    {
      "name" : "fixed",
      "type" : "Boolean",
      "desc" : "(Optional) True if the column width cannot be changed.  Defaults to false.",
      "memberOf" : ""
    },
    {
      "name" : "hidden",
      "type" : "Boolean",
      "desc" : "(Optional) True to hide the column. Defaults to false.",
      "memberOf" : ""
    },
    {
      "name" : "valign",
      "type" : "String",
      "desc" : "(Optional) Set the CSS vertical-align property of the column (eg. middle, top, bottom etc).  Defaults to undefined.",
      "memberOf" : ""
    },
    {
      "name" : "locked",
      "type" : "Boolean",
      "desc" : "(Optional) True to lock the column in place while scrolling the Grid.  Defaults to false.",
      "memberOf" : ""
    },
    {
      "name" : "lg",
      "type" : "Number",
      "desc" : "(Optional) can be '0' for hidden at this size (number less than 12)",
      "memberOf" : ""
    },
    {
      "name" : "renderer",
      "type" : "Function",
      "desc" : "(Optional) A function used to generate HTML markup for a cell\ngiven the cell's data value. See {@link #setRenderer}. If not specified, the\ndefault renderer returns the escaped data value. If an object is returned (bootstrap only)\nthen it is treated as a Roo Component object instance, and it is rendered after the initial row is rendered",
      "memberOf" : ""
    },
    {
      "name" : "xs",
      "type" : "Number",
      "desc" : "(Optional) can be '0' for hidden at this size (number less than 12)",
      "memberOf" : ""
    },
    {
      "name" : "xsHeader",
      "type" : "String",
      "desc" : "Header at Bootsrap Extra Small width (default for all)",
      "memberOf" : ""
    },
    {
      "name" : "sortable",
      "type" : "Boolean",
      "desc" : "(Optional) True if sorting is to be allowed on this column.\nDefaults to the value of the {@link #defaultSortable} property.\nWhether local/remote sorting is used is specified in {@link Roo.data.Store#remoteSort}.",
      "memberOf" : ""
    },
    {
      "name" : "header",
      "type" : "String",
      "desc" : "The header text to display in the Grid view.",
      "memberOf" : ""
    },
    {
      "name" : "width",
      "type" : "Number",
      "desc" : "(Optional) The initial width in pixels of the column. Using this\ninstead of {@link Roo.grid.Grid#autoSizeColumns} is more efficient.",
      "memberOf" : ""
    },
    {
      "name" : "resizable",
      "type" : "Boolean",
      "desc" : "(Optional) False to disable column resizing. Defaults to true.",
      "memberOf" : ""
    },
    {
      "name" : "xl",
      "type" : "Number",
      "desc" : "(Optional) can be '0' for hidden at this size (number less than 12)",
      "memberOf" : ""
    },
    {
      "name" : "dataIndex",
      "type" : "String",
      "desc" : "(Optional) The name of the field in the grid's {@link Roo.data.Store}'s\n{@link Roo.data.Record} definition from which to draw the column's value. If not\nspecified, the column's index is used as an index into the Record's data Array.",
      "memberOf" : ""
    },
    {
      "name" : "sm",
      "type" : "Number",
      "desc" : "(Optional) can be '0' for hidden at this size (number less than 12)",
      "memberOf" : ""
    }
  ],
  "methods" : [
    {
      "name" : "setRenderer",
      "type" : "function",
      "desc" : "Sets the rendering (formatting) function for a column.",
      "sig" : "(col, fn)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The function to use to process the cell's raw data\nto return HTML markup for the grid view. The render function is called with\nthe following parameters:<ul>\n<li>Data value.</li>\n<li>Cell metadata. An object in which you may set the following attributes:<ul>\n<li>css A CSS style string to apply to the table cell.</li>\n<li>attr An HTML attribute definition string to apply to the data container element <i>within</i> the table cell.</li></ul>\n<li>The {@link Roo.data.Record} from which the data was extracted.</li>\n<li>Row index</li>\n<li>Column index</li>\n<li>The {@link Roo.data.Store} object from which the Record was extracted</li></ul>",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "isHidden",
      "type" : "function",
      "desc" : "Returns true if the column is hidden.",
      "sig" : "(colIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "colIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "setColumnHeader",
      "type" : "function",
      "desc" : "Sets the header for a column.",
      "sig" : "(col, header)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "header",
          "type" : "String",
          "desc" : "The new header",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getColumnCount",
      "type" : "function",
      "desc" : "Returns the number of columns.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "addColumn",
      "type" : "function",
      "desc" : "Add a column (experimental...) - defaults to adding to the end..",
      "sig" : "(config)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getColumnHeader",
      "type" : "function",
      "desc" : "Returns the header for the specified column.",
      "sig" : "(col)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getRenderer",
      "type" : "function",
      "desc" : "Returns the rendering (formatting) function defined for the column.",
      "sig" : "(col)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Function",
          "desc" : "The function used to render the cell. See {@link #setRenderer}."
        }
      ]
    },
    {
      "name" : "getColumnTooltip",
      "type" : "function",
      "desc" : "Returns the tooltip for the specified column.",
      "sig" : "(col)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "setColumnWidth",
      "type" : "function",
      "desc" : "Sets the width for a column.",
      "sig" : "(col, width)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "width",
          "type" : "Number",
          "desc" : "The new width",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setDataIndex",
      "type" : "function",
      "desc" : "Sets the dataIndex for a column.",
      "sig" : "(col, dataIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "dataIndex",
          "type" : "Number",
          "desc" : "The new dataIndex",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "isCellEditable",
      "type" : "function",
      "desc" : "Returns true if the cell is editable.",
      "sig" : "(colIndex, rowIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "colIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "The row index - this is nto actually used..?",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getColumnsBy",
      "type" : "function",
      "desc" : "Returns the column configs that return true by the passed function that is called with (columnConfig, index)",
      "sig" : "(fn, scope)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "result"
        }
      ]
    },
    {
      "name" : "getColumnWidth",
      "type" : "function",
      "desc" : "Returns the width for the specified column.",
      "sig" : "(col, (optional))",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "(optional)",
          "type" : "",
          "desc" : "{String} gridSize bootstrap width size.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "isFixed",
      "type" : "function",
      "desc" : "Returns true if the column width cannot be changed",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "getCellEditor",
      "type" : "function",
      "desc" : "Returns the editor defined for the cell/column.\nreturn false or null to disable editing.",
      "sig" : "(colIndex, rowIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "colIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "The row index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getColumnId",
      "type" : "function",
      "desc" : "Returns the id of the column at the specified index.",
      "sig" : "(index)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "index",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "the id"
        }
      ]
    },
    {
      "name" : "getDataIndex",
      "type" : "function",
      "desc" : "Returns the dataIndex for the specified column.",
      "sig" : "(col)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "isResizable",
      "type" : "function",
      "desc" : "Returns true if the column can be resized",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "setColumnTooltip",
      "type" : "function",
      "desc" : "Sets the tooltip for a column.",
      "sig" : "(col, tooltip)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "tooltip",
          "type" : "String",
          "desc" : "The new tooltip",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setHidden",
      "type" : "function",
      "desc" : "Sets if a column is hidden.",
      "sig" : "(colIndex, hidden)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "colIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "hidden",
          "type" : "Boolean",
          "desc" : "True if the column is hidden",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setEditable",
      "type" : "function",
      "desc" : "Sets if a column is editable.",
      "sig" : "(col, editable)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "editable",
          "type" : "Boolean",
          "desc" : "True if the column is editable",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getColumnById",
      "type" : "function",
      "desc" : "Returns the column for a specified id.",
      "sig" : "(id)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "id",
          "type" : "String",
          "desc" : "The column id",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "the column"
        }
      ]
    },
    {
      "name" : "getColumnByDataIndex",
      "type" : "function",
      "desc" : "Returns the column Object for a specified dataIndex.",
      "sig" : "(dataIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "dataIndex",
          "type" : "String",
          "desc" : "The column dataIndex",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object|Boolean",
          "desc" : "the column or false if not found"
        }
      ]
    },
    {
      "name" : "setEditor",
      "type" : "function",
      "desc" : "Sets the editor for a column.",
      "sig" : "(col, editor)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "editor",
          "type" : "Object",
          "desc" : "The editor object",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "findColumnIndex",
      "type" : "function",
      "desc" : "Returns the index for a specified column dataIndex.",
      "sig" : "(dataIndex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "dataIndex",
          "type" : "String",
          "desc" : "The column dataIndex",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "the index, or -1 if not found"
        }
      ]
    },
    {
      "name" : "isSortable",
      "type" : "function",
      "desc" : "Returns true if the specified column is sortable.",
      "sig" : "(col)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getIndexById",
      "type" : "function",
      "desc" : "Returns the index for a specified column id.",
      "sig" : "(id)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "id",
          "type" : "String",
          "desc" : "The column id",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "the index, or -1 if not found"
        }
      ]
    },
    {
      "name" : "getTotalWidth",
      "type" : "function",
      "desc" : "Returns the total width of all columns.",
      "sig" : "(includeHidden)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "includeHidden",
          "type" : "Boolean",
          "desc" : "True to include hidden column widths",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "purgeListeners",
      "type" : "function",
      "desc" : "Removes all listeners for this object",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "on",
      "type" : "function",
      "desc" : "Appends an event handler to this element (shorthand for addListener)",
      "sig" : "(eventName, handler, scope, options)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "un",
      "type" : "function",
      "desc" : "Removes a listener (shorthand for removeListener)",
      "sig" : "(eventName, handler, scope)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addEvents",
      "type" : "function",
      "desc" : "Used to define events on this Observable",
      "sig" : "(object)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "object",
          "type" : "Object",
          "desc" : "The object with the events defined",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "releaseCapture",
      "type" : "function",
      "desc" : "Removes <b>all</b> added captures from the Observable.",
      "sig" : "(o)",
      "static" : true,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to release",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "removeListener",
      "type" : "function",
      "desc" : "Removes a listener",
      "sig" : "(eventName, handler, scope)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "fireEvent",
      "type" : "function",
      "desc" : "Fires the specified event with the passed parameters (minus the event name).",
      "sig" : "(eventName, args)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "args",
          "type" : "Object...",
          "desc" : "Variable number of parameters are passed to handlers",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "returns false if any of the handlers return false otherwise it returns true"
        }
      ]
    },
    {
      "name" : "hasListener",
      "type" : "function",
      "desc" : "Checks to see if this object has any listeners for a specified event",
      "sig" : "(eventName)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The name of the event to check for",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the event is being listened for, else false"
        }
      ]
    },
    {
      "name" : "capture",
      "type" : "function",
      "desc" : "Starts capture on the specified Observable. All events will be passed\nto the supplied function with the event name + standard signature of the event\n<b>before</b> the event is fired. If the supplied function returns false,\nthe event will not fire.",
      "sig" : "(o, fn, scope)",
      "static" : true,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to capture",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The function to call",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the fn",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addListener",
      "type" : "function",
      "desc" : "Appends an event handler to this component",
      "sig" : "(eventName, handler, scope, options)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional) An object containing handler configuration\nproperties. This may contain any of the following properties:<ul>\n<li>scope {Object} The scope in which to execute the handler function. The handler function's \"this\" context.</li>\n<li>delay {Number} The number of milliseconds to delay the invocation of the handler after te event fires.</li>\n<li>single {Boolean} True to add a handler to handle just the next firing of the event, and then remove itself.</li>\n<li>buffer {Number} Causes the handler to be scheduled to run in an {@link Roo.util.DelayedTask} delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</li>\n</ul><br>\n<p>\n<b>Combining Options</b><br>\nUsing the options argument, it is possible to combine different types of listeners:<br>\n<br>\nA normalized, delayed, one-time listener that auto stops the event and passes a custom argument (forumId)\n\t\t<pre><code>\n\t\tel.on('click', this.onClick, this, {\n \t\t\tsingle: true,\n    \t\tdelay: 100,\n    \t\tforumId: 4\n\t\t});\n\t\t</code></pre>\n<p>\n<b>Attaching multiple handlers in 1 call</b><br>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.\n<pre><code>\n\t\tel.on({\n\t\t\t'click': {\n        \t\tfn: this.onClick,\n        \t\tscope: this,\n        \t\tdelay: 100\n    \t\t}, \n    \t\t'mouseover': {\n        \t\tfn: this.onMouseOver,\n        \t\tscope: this\n    \t\t},\n    \t\t'mouseout': {\n        \t\tfn: this.onMouseOut,\n        \t\tscope: this\n    \t\t}\n\t\t});\n\t\t</code></pre>\n<p>\nOr a shorthand syntax which passes the same scope object to all handlers:\n     \t<pre><code>\n\t\tel.on({\n\t\t\t'click': this.onClick,\n    \t\t'mouseover': this.onMouseOver,\n    \t\t'mouseout': this.onMouseOut,\n    \t\tscope: this\n\t\t});\n\t\t</code></pre>",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ],
  "events" : [
    {
      "name" : "hiddenchange",
      "type" : "function",
      "desc" : "Fires when a column is hidden or \"unhidden\".",
      "sig" : "function (_self, columnIndex, hidden)\n{\n\n}",
      "memberOf" : "",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "ColumnModel",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "hidden",
          "type" : "Boolean",
          "desc" : "true if hidden, false otherwise",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "headerchange",
      "type" : "function",
      "desc" : "Fires when the text of a header changes.",
      "sig" : "function (_self, columnIndex, newText)\n{\n\n}",
      "memberOf" : "",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "ColumnModel",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "newText",
          "type" : "Number",
          "desc" : "The new header text",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "columlockchange",
      "type" : "function",
      "desc" : "Fires when a column's locked state is changed",
      "sig" : "function (_self, colIndex, locked)\n{\n\n}",
      "memberOf" : "",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "ColumnModel",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "colIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "locked",
          "type" : "Boolean",
          "desc" : "true if locked",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "columnmoved",
      "type" : "function",
      "desc" : "Fires when a column is moved.",
      "sig" : "function (_self, oldIndex, newIndex)\n{\n\n}",
      "memberOf" : "",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "ColumnModel",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "oldIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "newIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "widthchange",
      "type" : "function",
      "desc" : "Fires when the width of a column changes.",
      "sig" : "function (_self, columnIndex, newWidth)\n{\n\n}",
      "memberOf" : "",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "ColumnModel",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "newWidth",
          "type" : "Number",
          "desc" : "The new width",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ]
}