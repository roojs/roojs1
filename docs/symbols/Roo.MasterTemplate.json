{
  "name" : "Roo.MasterTemplate",
  "augments" : [
    "Roo.Template"
  ],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "Provides a template that can have child templates. The syntax is:\n<pre><code>\nvar t = new Roo.MasterTemplate(\n\t'&lt;select name=\"{name}\"&gt;',\n\t\t'&lt;tpl name=\"options\"&gt;&lt;option value=\"{value:trim}\"&gt;{text:ellipsis(10)}&lt;/option&gt;&lt;/tpl&gt;',\n\t'&lt;/select&gt;'\n);\nt.add('options', {value: 'foo', text: 'bar'});\n// or you can add multiple child elements in one shot\nt.addAll('options', [\n    {value: 'foo', text: 'bar'},\n    {value: 'foo2', text: 'bar2'},\n    {value: 'foo3', text: 'bar3'}\n]);\n// then append, applying the master template values\nt.append('my-form', {name: 'my-select'});\n</code></pre>\nA name attribute for the child template is not required if you have only one child\ntemplate or you want to refer to them by index.",
  "isSingleton" : false,
  "isStatic" : true,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "MasterTemplate",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [
    {
      "name" : "onLoad",
      "type" : "Function",
      "desc" : "Called after the template has been loaded and complied (usually from a remove source)",
      "memberOf" : "Roo.Template"
    },
    {
      "name" : "html",
      "type" : "String",
      "desc" : "The HTML fragment or an array of fragments to join(\"\") or multiple arguments to join(\"\")",
      "memberOf" : "Roo.Template"
    },
    {
      "name" : "url",
      "type" : "String",
      "desc" : "The Url to load the template from. beware if you are loading from a url, the data may not be ready if you use it instantly..\n                   it should be fixed so that template is observable...",
      "memberOf" : "Roo.Template"
    }
  ],
  "methods" : [
    {
      "name" : "fill",
      "type" : "function",
      "desc" : "Applies all the passed values to a child template.",
      "sig" : "(name, values, reset)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String/Number",
          "desc" : "(optional) The name or index of the child template",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Array",
          "desc" : "The values to be applied to the template, this should be an array of objects.",
          "isOptional" : false
        },
        {
          "name" : "reset",
          "type" : "Boolean",
          "desc" : "(optional) True to reset the template first",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "MasterTemplate",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "add",
      "type" : "function",
      "desc" : "Applies the passed values to a child template.",
      "sig" : "(name, values)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String/Number",
          "desc" : "(optional) The name or index of the child template",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Array/Object",
          "desc" : "The values to be applied to the template",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "MasterTemplate",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "from",
      "type" : "function",
      "desc" : "Creates a template from the passed element's value (display:none textarea, preferred) or innerHTML. e.g.\nvar tpl = Roo.MasterTemplate.from('element-id');",
      "sig" : "(el, config)",
      "static" : true,
      "memberOf" : "",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "reset",
      "type" : "function",
      "desc" : "Resets the template for reuse",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "MasterTemplate",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "addAll",
      "type" : "function",
      "desc" : "Alias for fill().",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "insertFirst",
      "type" : "function",
      "desc" : "Applies the supplied values to the template and inserts the new node(s) as the first child of el.",
      "sig" : "(el, values, returnElement)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The context element",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        },
        {
          "name" : "returnElement",
          "type" : "Boolean",
          "desc" : "(optional) true to return a Roo.Element (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The new node or Element"
        }
      ]
    },
    {
      "name" : "overwrite",
      "type" : "function",
      "desc" : "Applies the supplied values to the template and overwrites the content of el with the new node(s).",
      "sig" : "(el, values, returnElement)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The context element",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        },
        {
          "name" : "returnElement",
          "type" : "Boolean",
          "desc" : "(optional) true to return a Roo.Element (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The new node or Element"
        }
      ]
    },
    {
      "name" : "insertBefore",
      "type" : "function",
      "desc" : "Applies the supplied values to the template and inserts the new node(s) before el.",
      "sig" : "(el, values, returnElement)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The context element",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        },
        {
          "name" : "returnElement",
          "type" : "Boolean",
          "desc" : "(optional) true to return a Roo.Element (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The new node or Element"
        }
      ]
    },
    {
      "name" : "applyTemplate",
      "type" : "function",
      "desc" : "Returns an HTML fragment of this template with the specified values applied.",
      "sig" : "(values)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "The HTML fragment"
        }
      ]
    },
    {
      "name" : "compile",
      "type" : "function",
      "desc" : "Compiles the template into an internal function, eliminating the RegEx overhead.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Template",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "set",
      "type" : "function",
      "desc" : "Sets the HTML used as the template and optionally compiles it.",
      "sig" : "(html, compile)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "html",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "compile",
          "type" : "Boolean",
          "desc" : "(optional) True to compile the template (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Template",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "insertAfter",
      "type" : "function",
      "desc" : "Applies the supplied values to the template and inserts the new node(s) after el.",
      "sig" : "(el, values, returnElement)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The context element",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        },
        {
          "name" : "returnElement",
          "type" : "Boolean",
          "desc" : "(optional) true to return a Roo.Element (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The new node or Element"
        }
      ]
    },
    {
      "name" : "append",
      "type" : "function",
      "desc" : "Applies the supplied values to the template and appends the new node(s) to el.",
      "sig" : "(el, values, returnElement)",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The context element",
          "isOptional" : false
        },
        {
          "name" : "values",
          "type" : "Object",
          "desc" : "The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})",
          "isOptional" : false
        },
        {
          "name" : "returnElement",
          "type" : "Boolean",
          "desc" : "(optional) true to return a Roo.Element (defaults to undefined)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The new node or Element"
        }
      ]
    },
    {
      "name" : "apply",
      "type" : "function",
      "desc" : "Alias for {@link #applyTemplate}",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Template",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    }
  ],
  "events" : []
}