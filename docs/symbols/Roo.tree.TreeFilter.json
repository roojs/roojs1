{
  "name" : "Roo.tree.TreeFilter",
  "augments" : [],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "Note this class is experimental and doesn't update the indent (lines) or expand collapse icons of the nodes",
  "isSingleton" : false,
  "isStatic" : true,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "TreeFilter",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "tree",
      "type" : "TreePanel",
      "desc" : "",
      "isOptional" : false
    },
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "(optional)",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [],
  "methods" : [
    {
      "name" : "clear",
      "type" : "function",
      "desc" : "Clears the current filter. Note: with the \"remove\" option\nset a filter cannot be cleared.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "filter",
      "type" : "function",
      "desc" : "Filter the data by a specific attribute.",
      "sig" : "(value, attr, startNode)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "String/RegExp",
          "desc" : "Either string that the attribute value\nshould start with or a RegExp to test against the attribute",
          "isOptional" : false
        },
        {
          "name" : "attr",
          "type" : "String",
          "desc" : "(optional) The attribute passed in your node's attributes collection. Defaults to \"text\".",
          "isOptional" : false
        },
        {
          "name" : "startNode",
          "type" : "TreeNode",
          "desc" : "(optional) The node to start the filter at.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "filterBy",
      "type" : "function",
      "desc" : "Filter by a function. The passed function will be called with each\nnode in the tree (or from the startNode). If the function returns true, the node is kept\notherwise it is filtered. If a node is filtered, its children are also filtered.",
      "sig" : "(fn, scope)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The filter function",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope of the function (defaults to the current node)",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ],
  "events" : []
}