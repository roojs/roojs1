{
  "name" : "Roo.Layer",
  "augments" : [
    "Roo.Element"
  ],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "An extended {@link Roo.Element} object that supports a shadow and shim, constrain to viewport and\nautomatic maintaining of shadow/shim positions.",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "Layer",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "An object with config options.",
      "isOptional" : false
    },
    {
      "name" : "existingEl",
      "type" : "String/HTMLElement",
      "desc" : "(optional) Uses an existing DOM element. If the element is not found it creates it.",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [
    {
      "name" : "shadow",
      "type" : "String/Boolean",
      "desc" : "True to create a shadow element with default class \"x-layer-shadow\", or\nyou can pass a string with a CSS class name. False turns off the shadow.",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "constrain",
      "type" : "Boolean",
      "desc" : "False to disable constrain to viewport (defaults to true)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "zindex",
      "type" : "Number",
      "desc" : "Starting z-index (defaults to 11000)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "shadowOffset",
      "type" : "Number",
      "desc" : "Number of pixels to offset the shadow (defaults to 3)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "dh",
      "type" : "Object",
      "desc" : "DomHelper object config to create element with (defaults to {tag: \"div\", cls: \"x-layer\"}).",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "cls",
      "type" : "String",
      "desc" : "CSS class to add to the element",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "shim",
      "type" : "Boolean",
      "desc" : "False to disable the iframe shim in browsers which need one (defaults to true)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    }
  ],
  "methods" : [
    {
      "name" : "setZIndex",
      "type" : "function",
      "desc" : "Sets the z-index of this layer and adjusts any shadow and shim z-indexes. The layer z-index is automatically\nincremented by two more than the value passed in so that it always shows above any shadow or shim (the shadow\nelement, if any, will be assigned z-index + 1, and the shim element, if any, will be assigned the unmodified z-index).",
      "sig" : "(zindex)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "zindex",
          "type" : "Number",
          "desc" : "The new z-index to set",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "this",
          "desc" : "The Layer"
        }
      ]
    },
    {
      "name" : "getCenterXY",
      "type" : "function",
      "desc" : "Calculates the x, y to center this element on the screen",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "The x, y values [x, y]"
        }
      ]
    },
    {
      "name" : "getScroll",
      "type" : "function",
      "desc" : "Returns the current scroll position of the element.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "An object containing the scroll position in the format {left: (scrollLeft), top: (scrollTop)}"
        }
      ]
    },
    {
      "name" : "createShim",
      "type" : "function",
      "desc" : "Creates an iframe shim for this element to keep selects and other windowed objects from\nshowing through.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The new shim element"
        }
      ]
    },
    {
      "name" : "scrollTo",
      "type" : "function",
      "desc" : "Scrolls this element the specified scroll point. It does NOT do bounds checking so if you scroll to a weird value it will try to do it. For auto bounds checking, use scroll().",
      "sig" : "(side, value, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "side",
          "type" : "String",
          "desc" : "Either \"left\" for scrollLeft values or \"top\" for scrollTop values.",
          "isOptional" : false
        },
        {
          "name" : "value",
          "type" : "Number",
          "desc" : "The new scroll value",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "removeAllListeners",
      "type" : "function",
      "desc" : "Removes all previous added listeners from this element",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setStyle",
      "type" : "function",
      "desc" : "Wrapper for setting style properties, also takes single object parameter of multiple styles.",
      "sig" : "(property, value)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "property",
          "type" : "String/Object",
          "desc" : "The style property to be set, or an object of multiple styles.",
          "isOptional" : false
        },
        {
          "name" : "value",
          "type" : "String",
          "desc" : "(optional) The value to apply to the given property, or null if an object was passed.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "on",
      "type" : "function",
      "desc" : "Appends an event handler (Shorthand for addListener)",
      "sig" : "(eventName, fn, scope, options)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to append",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) of the fn",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional)An object with standard {@link Roo.EventManager#addListener} options",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addClassOnClick",
      "type" : "function",
      "desc" : "Sets up event handlers to add and remove a css class when the mouse is down and then up on this element (a click effect)",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getBorderWidth",
      "type" : "function",
      "desc" : "Gets the width of the border(s) for the specified side(s)",
      "sig" : "(side)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "side",
          "type" : "String",
          "desc" : "Can be t, l, r, b or any combination of those to add multiple values. For example,\npassing lr would get the border (l)eft width + the border (r)ight width.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The width of the sides passed added together"
        }
      ]
    },
    {
      "name" : "scroll",
      "type" : "function",
      "desc" : "Scrolls this element the specified direction. Does bounds checking to make sure the scroll is\nwithin this element's scrollable range.",
      "sig" : "(direction, distance, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "direction",
          "type" : "String",
          "desc" : "Possible values are: \"l\",\"left\" - \"r\",\"right\" - \"t\",\"top\",\"up\" - \"b\",\"bottom\",\"down\".",
          "isOptional" : false
        },
        {
          "name" : "distance",
          "type" : "Number",
          "desc" : "How far to scroll the element in pixels",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "Returns true if a scroll was triggered or false if the element\nwas scrolled as far as it could go."
        }
      ]
    },
    {
      "name" : "addKeyMap",
      "type" : "function",
      "desc" : "Creates a KeyMap for this element",
      "sig" : "(config)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "The KeyMap config. See {@link Roo.KeyMap} for more details",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.KeyMap",
          "desc" : "The KeyMap created"
        }
      ]
    },
    {
      "name" : "createChild",
      "type" : "function",
      "desc" : "Creates the passed DomHelper config and appends it to this element or optionally inserts it before the passed child element.",
      "sig" : "(config, insertBefore, returnDom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "DomHelper element config object.  If no tag is specified (e.g., {tag:'input'}) then a div will be\nautomatically generated with the specified attributes.",
          "isOptional" : false
        },
        {
          "name" : "insertBefore",
          "type" : "HTMLElement",
          "desc" : "(optional) a child element of this element",
          "isOptional" : false
        },
        {
          "name" : "returnDom",
          "type" : "Boolean",
          "desc" : "(optional) true to return the dom node instead of creating an Element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The new child element"
        }
      ]
    },
    {
      "name" : "addClass",
      "type" : "function",
      "desc" : "Adds one or more CSS classes to the element. Duplicate classes are automatically filtered out.",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String/Array",
          "desc" : "The CSS class to add, or an array of classes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "attr",
      "type" : "function",
      "desc" : "Sets or Returns the value the dom attribute value",
      "sig" : "(name, value)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "name",
          "type" : "String|Object",
          "desc" : "The attribute name (or object to set multiple attributes)",
          "isOptional" : false
        },
        {
          "name" : "value",
          "type" : "String",
          "desc" : "(optional) The value to set the attribute to",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "The attribute value"
        }
      ]
    },
    {
      "name" : "setOpacity",
      "type" : "function",
      "desc" : "Set the opacity of the element",
      "sig" : "(opacity, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "opacity",
          "type" : "Float",
          "desc" : "The new opacity. 0 = transparent, .5 = 50% visibile, 1 = fully visible, etc",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setSize",
      "type" : "function",
      "desc" : "Set the size of the element. If animation is true, both width an height will be animated concurrently.",
      "sig" : "(width, height, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "width",
          "type" : "Number",
          "desc" : "The new width",
          "isOptional" : false
        },
        {
          "name" : "height",
          "type" : "Number",
          "desc" : "The new height",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "un",
      "type" : "function",
      "desc" : "Removes an event handler from this element (shorthand for removeListener)",
      "sig" : "(eventName, fn)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "the type of event to remove",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "the method the event invokes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "up",
      "type" : "function",
      "desc" : "Walks up the dom looking for a parent node that matches the passed simple selector (e.g. div.some-class or span:first-child).\nThis is a shortcut for findParentNode() that always returns an Roo.Element.",
      "sig" : "(selector, maxDepth)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The simple selector to test",
          "isOptional" : false
        },
        {
          "name" : "maxDepth",
          "type" : "Number/String/HTMLElement/Element",
          "desc" : "(optional) The max depth to\n                search as a number or element (defaults to 10 || document.body)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The matching DOM node (or null if no match was found)"
        }
      ]
    },
    {
      "name" : "repaint",
      "type" : "function",
      "desc" : "Forces the browser to repaint this element",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "translatePoints",
      "type" : "function",
      "desc" : "Translates the passed page coordinates into left/top css values for this element",
      "sig" : "(x, y)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number/Array",
          "desc" : "The page x or an array containing [x, y]",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "The page y",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "An object with left and top properties. e.g. {left: (value), top: (value)}"
        }
      ]
    },
    {
      "name" : "createProxy",
      "type" : "function",
      "desc" : "Creates a proxy element of this element",
      "sig" : "(config, renderTo, matchBox)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "config",
          "type" : "String/Object",
          "desc" : "The class name of the proxy element or a DomHelper config object",
          "isOptional" : false
        },
        {
          "name" : "renderTo",
          "type" : "String/HTMLElement",
          "desc" : "(optional) The element or element id to render the proxy to (defaults to document.body)",
          "isOptional" : false
        },
        {
          "name" : "matchBox",
          "type" : "Boolean",
          "desc" : "(optional) True to align and size the proxy to this element now (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The new proxy element"
        }
      ]
    },
    {
      "name" : "down",
      "type" : "function",
      "desc" : "Selects a single *direct* child based on the passed CSS selector (the selector should not contain an id).",
      "sig" : "(selector, returnDom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The CSS selector",
          "isOptional" : false
        },
        {
          "name" : "returnDom",
          "type" : "Boolean",
          "desc" : "(optional) True to return the DOM node instead of Roo.Element (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The child Roo.Element (or DOM node if returnDom = true)"
        }
      ]
    },
    {
      "name" : "getBox",
      "type" : "function",
      "desc" : "Return a box {x, y, width, height} that can be used to set another elements\nsize/location to match this element.",
      "sig" : "(contentBox, local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "contentBox",
          "type" : "Boolean",
          "desc" : "(optional) If true a box for the content of the element is returned.",
          "isOptional" : false
        },
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "(optional) If true the element's left and top are returned instead of page x/y.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "box An object in the format {x, y, width, height}"
        }
      ]
    },
    {
      "name" : "toggle",
      "type" : "function",
      "desc" : "Toggles the element's visibility or display, depending on visibility mode.",
      "sig" : "(animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setBounds",
      "type" : "function",
      "desc" : "Sets the element's position and size in one shot. If animation is true then width, height, x and y will be animated concurrently.",
      "sig" : "(x, y, width, height, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "X value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "Y value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "width",
          "type" : "Number",
          "desc" : "The new width",
          "isOptional" : false
        },
        {
          "name" : "height",
          "type" : "Number",
          "desc" : "The new height",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getX",
      "type" : "function",
      "desc" : "Gets the current X position of the element based on page coordinates.  Element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The X position of the element"
        }
      ]
    },
    {
      "name" : "getY",
      "type" : "function",
      "desc" : "Gets the current Y position of the element based on page coordinates.  Element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The Y position of the element"
        }
      ]
    },
    {
      "name" : "focus",
      "type" : "function",
      "desc" : "Tries to focus the element. Any exceptions are caught and ignored.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "get",
      "type" : "function",
      "desc" : "Static method to retrieve Element objects. Uses simple caching to consistently return the same object.\nAutomatically fixes if an object was recreated with the same id via AJAX or DOM.",
      "sig" : "(el)",
      "static" : true,
      "memberOf" : "Roo.Element",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The id of the node, a DOM Node or an existing Element.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "The Element object"
        }
      ]
    },
    {
      "name" : "autoHeight",
      "type" : "function",
      "desc" : "Measures the element's content height and updates height to match. Note: this function uses setTimeout so\nthe new height may not be available immediately.",
      "sig" : "(animate, duration, onComplete, easing)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "animate",
          "type" : "Boolean",
          "desc" : "(optional) Animate the transition (defaults to false)",
          "isOptional" : false
        },
        {
          "name" : "duration",
          "type" : "Float",
          "desc" : "(optional) Length of the animation in seconds (defaults to .35)",
          "isOptional" : false
        },
        {
          "name" : "onComplete",
          "type" : "Function",
          "desc" : "(optional) Function to call when animation completes",
          "isOptional" : false
        },
        {
          "name" : "easing",
          "type" : "String",
          "desc" : "(optional) Easing method to use (defaults to easeOut)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "scrollIntoView",
      "type" : "function",
      "desc" : "Scrolls this element into view within the passed container.",
      "sig" : "(container, hscroll)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "container",
          "type" : "String/HTMLElement/Element",
          "desc" : "(optional) The container element to scroll (defaults to document.body)",
          "isOptional" : false
        },
        {
          "name" : "hscroll",
          "type" : "Boolean",
          "desc" : "(optional) False to disable horizontal scroll (defaults to true)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getAlignToXY",
      "type" : "function",
      "desc" : "Gets the x,y coordinates to align this element with another element. See {@link #alignTo} for more info on the\nsupported position values.",
      "sig" : "(element, position, offsets)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "element",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The element to align to.",
          "isOptional" : false
        },
        {
          "name" : "position",
          "type" : "String",
          "desc" : "The position to align to.",
          "isOptional" : false
        },
        {
          "name" : "offsets",
          "type" : "Array",
          "desc" : "(optional) Offset the positioning by [x, y]",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "[x, y]"
        }
      ]
    },
    {
      "name" : "clearOpacity",
      "type" : "function",
      "desc" : "Clears any opacity settings from this element. Required in some cases for IE.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setPositioning",
      "type" : "function",
      "desc" : "Set positioning with an object returned by getPositioning().",
      "sig" : "(posCfg)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "posCfg",
          "type" : "Object",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getMargins",
      "type" : "function",
      "desc" : "Returns an object with properties top, left, right and bottom representing the margins of this element unless sides is passed,\nthen it returns the calculated width of the sides (see getPadding)",
      "sig" : "(sides)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "sides",
          "type" : "String",
          "desc" : "(optional) Any combination of l, r, t, b to get the sum of those sides",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object/Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "setRegion",
      "type" : "function",
      "desc" : "Sets the element's position and size the the specified region. If animation is true then width, height, x and y will be animated concurrently.",
      "sig" : "(region, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "region",
          "type" : "Roo.lib.Region",
          "desc" : "The region to fill",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getAttributeNS",
      "type" : "function",
      "desc" : "Returns the value of a namespaced attribute from the element's underlying DOM node.",
      "sig" : "(namespace, name)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "namespace",
          "type" : "String",
          "desc" : "The namespace in which to look for the attribute",
          "isOptional" : false
        },
        {
          "name" : "name",
          "type" : "String",
          "desc" : "The attribute name",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "The attribute value"
        }
      ]
    },
    {
      "name" : "setLeft",
      "type" : "function",
      "desc" : "Sets the element's left position directly using CSS style (instead of {@link #setX}).",
      "sig" : "(left)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "left",
          "type" : "String",
          "desc" : "The left CSS property value",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "load",
      "type" : "function",
      "desc" : "Direct access to the UpdateManager update() method (takes the same parameters).",
      "sig" : "(url, params, callback, discardUrl)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "url",
          "type" : "String/Function",
          "desc" : "The url for this request or a function to call to get the url",
          "isOptional" : false
        },
        {
          "name" : "params",
          "type" : "String/Object",
          "desc" : "(optional) The parameters to pass as either a url encoded string \"param1=1&amp;param2=2\" or an object {param1: 1, param2: 2}",
          "isOptional" : false
        },
        {
          "name" : "callback",
          "type" : "Function",
          "desc" : "(optional) Callback when transaction is complete - called with signature (oElement, bSuccess)",
          "isOptional" : false
        },
        {
          "name" : "discardUrl",
          "type" : "Boolean",
          "desc" : "(optional) By default when you execute an update the defaultUrl is changed to the last used url. If true, it will not store the url.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "replaceClass",
      "type" : "function",
      "desc" : "Replaces a CSS class on the element with another.  If the old name does not exist, the new name will simply be added.",
      "sig" : "(oldClassName, newClassName)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "oldClassName",
          "type" : "String",
          "desc" : "The CSS class to replace",
          "isOptional" : false
        },
        {
          "name" : "newClassName",
          "type" : "String",
          "desc" : "The replacement CSS class",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "initDDTarget",
      "type" : "function",
      "desc" : "Initializes a {@link Roo.dd.DDTarget} object for this element.",
      "sig" : "(group, config, overrides)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "group",
          "type" : "String",
          "desc" : "The group the DDTarget object is member of",
          "isOptional" : false
        },
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "The DDTarget config object",
          "isOptional" : false
        },
        {
          "name" : "overrides",
          "type" : "Object",
          "desc" : "An object containing methods to override/implement on the DDTarget object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.dd.DDTarget",
          "desc" : "The DDTarget object"
        }
      ]
    },
    {
      "name" : "setHeight",
      "type" : "function",
      "desc" : "Set the height of the element",
      "sig" : "(height, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "height",
          "type" : "Number",
          "desc" : "The new height",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "clean",
      "type" : "function",
      "desc" : "Removes worthless text nodes",
      "sig" : "(forceReclean)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "forceReclean",
          "type" : "Boolean",
          "desc" : "(optional) By default the element\nkeeps track if it has been cleaned already so\nyou can call this over and over. However, if you update the element and\nneed to force a reclean, you can pass true.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getPositioning",
      "type" : "function",
      "desc" : "Gets an object with all CSS positioning properties. Useful along with setPostioning to get\nsnapshot before performing an update and then restoring the element.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "update",
      "type" : "function",
      "desc" : "Update the innerHTML of this element, optionally searching for and processing scripts",
      "sig" : "(html, loadScripts, callback)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "html",
          "type" : "String",
          "desc" : "The new HTML",
          "isOptional" : false
        },
        {
          "name" : "loadScripts",
          "type" : "Boolean",
          "desc" : "(optional) true to look for and process scripts",
          "isOptional" : false
        },
        {
          "name" : "callback",
          "type" : "Function",
          "desc" : "For async script loading you can be noticed when the update completes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "contains",
      "type" : "function",
      "desc" : "Returns true if this element is an ancestor of the passed element",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "HTMLElement/String",
          "desc" : "The element to check",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if this element is an ancestor of el, else false"
        }
      ]
    },
    {
      "name" : "appendChild",
      "type" : "function",
      "desc" : "Appends the passed element(s) to this element",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Array/Element/CompositeElement",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getValue",
      "type" : "function",
      "desc" : "Returns the value of the \"value\" attribute",
      "sig" : "(asNumber)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "asNumber",
          "type" : "Boolean",
          "desc" : "true to parse the value as a number",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String/Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getRegion",
      "type" : "function",
      "desc" : "Returns the region of the given element.\nThe element must be part of the DOM tree to have a region (display:none or elements not appended return false).",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Region",
          "desc" : "A Roo.lib.Region containing \"top, left, bottom, right\" member data."
        }
      ]
    },
    {
      "name" : "anchorTo",
      "type" : "function",
      "desc" : "Anchors an element to another element and realigns it when the window is resized.",
      "sig" : "(element, position, offsets, animate, monitorScroll, callback)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "element",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The element to align to.",
          "isOptional" : false
        },
        {
          "name" : "position",
          "type" : "String",
          "desc" : "The position to align to.",
          "isOptional" : false
        },
        {
          "name" : "offsets",
          "type" : "Array",
          "desc" : "(optional) Offset the positioning by [x, y]",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation or a standard Element animation config object",
          "isOptional" : false
        },
        {
          "name" : "monitorScroll",
          "type" : "Boolean/Number",
          "desc" : "(optional) True to monitor body scroll and reposition. If this parameter\nis a number, it is used as the buffer delay (defaults to 50ms).",
          "isOptional" : false
        },
        {
          "name" : "callback",
          "type" : "Function",
          "desc" : "The function to call after the animation finishes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "removeClass",
      "type" : "function",
      "desc" : "Removes one or more CSS classes from the element.",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String/Array",
          "desc" : "The CSS class to remove, or an array of classes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "radioClass",
      "type" : "function",
      "desc" : "Adds one or more CSS classes to this element and removes the same class(es) from all siblings.",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String/Array",
          "desc" : "The CSS class to add, or an array of classes",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getWidth",
      "type" : "function",
      "desc" : "Returns the offset width of the element",
      "sig" : "(contentWidth)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "contentWidth",
          "type" : "Boolean",
          "desc" : "(optional) true to get the width minus borders and padding",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The element's width"
        }
      ]
    },
    {
      "name" : "insertBefore",
      "type" : "function",
      "desc" : "Inserts this element before the passed element in the DOM",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The element to insert before",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getHeight",
      "type" : "function",
      "desc" : "Returns the offset height of the element",
      "sig" : "(contentHeight)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "contentHeight",
          "type" : "Boolean",
          "desc" : "(optional) true to get the height minus borders and padding",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The element's height"
        }
      ]
    },
    {
      "name" : "setTop",
      "type" : "function",
      "desc" : "Sets the element's top position directly using CSS style (instead of {@link #setY}).",
      "sig" : "(top)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "top",
          "type" : "String",
          "desc" : "The top CSS property value",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "toggleClass",
      "type" : "function",
      "desc" : "Toggles the specified CSS class on this element (removes it if it already exists, otherwise adds it).",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String",
          "desc" : "The CSS class to toggle",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "wrap",
      "type" : "function",
      "desc" : "Creates and wraps this element with another element",
      "sig" : "(config, returnDom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "(optional) DomHelper element config object for the wrapper element or null for an empty div",
          "isOptional" : false
        },
        {
          "name" : "returnDom",
          "type" : "Boolean",
          "desc" : "(optional) True to return the raw DOM element instead of Roo.Element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Element",
          "desc" : "The newly created wrapper element"
        }
      ]
    },
    {
      "name" : "setVisible",
      "type" : "function",
      "desc" : "Sets the visibility of the element (see details). If the visibilityMode is set to Element.DISPLAY, it will use\nthe display property to hide the element, otherwise it uses visibility. The default is to hide and show using the visibility property.",
      "sig" : "(visible, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "visible",
          "type" : "Boolean",
          "desc" : "Whether the element is visible",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "addListener",
      "type" : "function",
      "desc" : "Appends an event handler",
      "sig" : "(eventName, fn, scope, options)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to append",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) of the fn",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional)An object with standard {@link Roo.EventManager#addListener} options",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setWidth",
      "type" : "function",
      "desc" : "Set the width of the element",
      "sig" : "(width, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "width",
          "type" : "Number",
          "desc" : "The new width",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "center",
      "type" : "function",
      "desc" : "Centers the Element in either the viewport, or another Element.",
      "sig" : "(centerIn)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "centerIn",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "(optional) The element in which to center the element.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "isVisible",
      "type" : "function",
      "desc" : "Checks whether the element is currently visible using both visibility and display properties.",
      "sig" : "(deep)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "deep",
          "type" : "Boolean",
          "desc" : "(optional) True to walk the dom and see if parent elements are hidden (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the element is currently visible, else false"
        }
      ]
    },
    {
      "name" : "findParent",
      "type" : "function",
      "desc" : "Looks at this node and then at parent nodes for a match of the passed simple selector (e.g. div.some-class or span:first-child)",
      "sig" : "(selector, maxDepth, returnEl)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The simple selector to test",
          "isOptional" : false
        },
        {
          "name" : "maxDepth",
          "type" : "Number/String/HTMLElement/Element",
          "desc" : "(optional) The max depth to\n                search as a number or element (defaults to 10 || document.body)",
          "isOptional" : false
        },
        {
          "name" : "returnEl",
          "type" : "Boolean",
          "desc" : "(optional) True to return a Roo.Element object instead of DOM node",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement",
          "desc" : "The matching DOM node (or null if no match was found)"
        }
      ]
    },
    {
      "name" : "addKeyListener",
      "type" : "function",
      "desc" : "Convenience method for constructing a KeyMap",
      "sig" : "(key, fn, scope)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "key",
          "type" : "Number/Array/Object/String",
          "desc" : "Either a string with the keys to listen for, the numeric key code, array of key codes or an object with the following options:\n                                 {key: (number or array), shift: (true/false), ctrl: (true/false), alt: (true/false)}",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The function to call",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope of the function",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.KeyMap",
          "desc" : "The KeyMap created"
        }
      ]
    },
    {
      "name" : "swallowEvent",
      "type" : "function",
      "desc" : "Stops the specified event from bubbling and optionally prevents the default action",
      "sig" : "(eventName, preventDefault)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "preventDefault",
          "type" : "Boolean",
          "desc" : "(optional) true to prevent the default action too",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getStyles",
      "type" : "function",
      "desc" : "Returns an object with properties matching the styles requested.\nFor example, el.getStyles('color', 'font-size', 'width') might return\n{'color': '#FFFFFF', 'font-size': '13px', 'width': '100px'}.",
      "sig" : "(style1, style2)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "style1",
          "type" : "String",
          "desc" : "A style name",
          "isOptional" : false
        },
        {
          "name" : "style2",
          "type" : "String",
          "desc" : "A style name",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "The style object"
        }
      ]
    },
    {
      "name" : "getSize",
      "type" : "function",
      "desc" : "Returns the size of the element.",
      "sig" : "(contentSize)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "contentSize",
          "type" : "Boolean",
          "desc" : "(optional) true to get the width/size minus borders and padding",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "An object containing the element's size {width: (element width), height: (element height)}"
        }
      ]
    },
    {
      "name" : "endMeasure",
      "type" : "function",
      "desc" : "Restores displays to before beginMeasure was called",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getViewSize",
      "type" : "function",
      "desc" : "Returns the width and height of the viewport.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "An object containing the viewport's size {width: (viewport width), height: (viewport height)}"
        }
      ]
    },
    {
      "name" : "addClassOnFocus",
      "type" : "function",
      "desc" : "Sets up event handlers to add and remove a css class when this element has the focus",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "alignTo",
      "type" : "function",
      "desc" : "Aligns this element with another element relative to the specified anchor points. If the other element is the\ndocument it aligns it to the viewport.\nThe position parameter is optional, and can be specified in any one of the following formats:\n<ul>\n  <li><b>Blank</b>: Defaults to aligning the element's top-left corner to the target's bottom-left corner (\"tl-bl\").</li>\n  <li><b>One anchor (deprecated)</b>: The passed anchor position is used as the target element's anchor point.\n      The element being aligned will position its top-left corner (tl) to that point.  <i>This method has been\n      deprecated in favor of the newer two anchor syntax below</i>.</li>\n  <li><b>Two anchors</b>: If two values from the table below are passed separated by a dash, the first value is used as the\n      element's anchor point, and the second value is used as the target's anchor point.</li>\n</ul>\nIn addition to the anchor points, the position parameter also supports the \"?\" character.  If \"?\" is passed at the end of\nthe position string, the element will attempt to align as specified, but the position will be adjusted to constrain to\nthe viewport if necessary.  Note that the element being aligned might be swapped to align to a different position than\nthat specified in order to enforce the viewport constraints.\nFollowing are all of the supported anchor positions:\n    <pre>\n    Value  Description\n    -----  -----------------------------\n    tl     The top left corner (default)\n    t      The center of the top edge\n    tr     The top right corner\n    l      The center of the left edge\n    c      In the center of the element\n    r      The center of the right edge\n    bl     The bottom left corner\n    b      The center of the bottom edge\n    br     The bottom right corner\n    </pre>\n    Example Usage:\n    <pre><code>\n    // align el to other-el using the default positioning (\"tl-bl\", non-constrained)\n    el.alignTo(\"other-el\");\n\n    // align the top left corner of el with the top right corner of other-el (constrained to viewport)\n    el.alignTo(\"other-el\", \"tr?\");\n\n    // align the bottom right corner of el with the center left edge of other-el\n    el.alignTo(\"other-el\", \"br-l?\");\n\n    // align the center of el with the bottom left corner of other-el and\n    // adjust the x position by -6 pixels (and the y position by 0)\n    el.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n    </code></pre>",
      "sig" : "(element, position, offsets, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "element",
          "type" : "String/HTMLElement/Roo.Element",
          "desc" : "The element to align to.",
          "isOptional" : false
        },
        {
          "name" : "position",
          "type" : "String",
          "desc" : "The position to align to.",
          "isOptional" : false
        },
        {
          "name" : "offsets",
          "type" : "Array",
          "desc" : "(optional) Offset the positioning by [x, y]",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "insertAfter",
      "type" : "function",
      "desc" : "Inserts this element after the passed element in the DOM",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The element to insert after",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "hide",
      "type" : "function",
      "desc" : "Hide this element - Uses display mode to determine whether to use \"display\" or \"visibility\". See {@link #setVisible}.",
      "sig" : "(animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setBottom",
      "type" : "function",
      "desc" : "Sets the element's CSS bottom style.",
      "sig" : "(bottom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "bottom",
          "type" : "String",
          "desc" : "The bottom CSS property value",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "clearPositioning",
      "type" : "function",
      "desc" : "Clear positioning back to the default when the document was loaded",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "String",
          "desc" : "(optional) The value to use for the left,right,top,bottom, defaults to '' (empty string). You could use 'auto'.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "isDisplayed",
      "type" : "function",
      "desc" : "Returns true if display is not \"none\"",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "show",
      "type" : "function",
      "desc" : "Show this element - Uses display mode to determine whether to use \"display\" or \"visibility\". See {@link #setVisible}.",
      "sig" : "(animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setLeftTop",
      "type" : "function",
      "desc" : "Quick set left and top adding default units",
      "sig" : "(left, top)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "left",
          "type" : "String",
          "desc" : "The left CSS property value",
          "isOptional" : false
        },
        {
          "name" : "top",
          "type" : "String",
          "desc" : "The top CSS property value",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "child",
      "type" : "function",
      "desc" : "Selects a single child at any depth below this element based on the passed CSS selector (the selector should not contain an id).",
      "sig" : "(selector, returnDom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The CSS selector",
          "isOptional" : false
        },
        {
          "name" : "returnDom",
          "type" : "Boolean",
          "desc" : "(optional) True to return the DOM node instead of Roo.Element (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The child Roo.Element (or DOM node if returnDom = true)"
        }
      ]
    },
    {
      "name" : "unmask",
      "type" : "function",
      "desc" : "Removes a previously applied mask. If removeEl is true the mask overlay is destroyed, otherwise\nit is cached for reuse.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "moveTo",
      "type" : "function",
      "desc" : "Sets the position of the element in page coordinates, regardless of how the element is positioned.\nThe element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "(x, y, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "X value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "Y value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "addClassOnOver",
      "type" : "function",
      "desc" : "Sets up event handlers to add and remove a css class when the mouse is over this element",
      "sig" : "(className, preventFlicker)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "preventFlicker",
          "type" : "Boolean",
          "desc" : "(optional) If set to true, it prevents flickering by filtering\nmouseout events for children elements",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getLeft",
      "type" : "function",
      "desc" : "Gets the left X coordinate",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "True to get the local css position instead of page coordinate",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "isScrollable",
      "type" : "function",
      "desc" : "Returns true if this element is scrollable.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "boxWrap",
      "type" : "function",
      "desc" : "Wraps the specified element with a special markup/CSS block that renders by default as a gray container with a\ngradient background, rounded corners and a 4-way shadow.",
      "sig" : "(class)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "class",
          "type" : "String",
          "desc" : "(optional) A base CSS class to apply to the containing wrapper element (defaults to 'x-box').\nNote that there are a number of CSS rules that are dependent on this name to make the overall effect work,\nso if you supply an alternate base class, make sure you also supply all of the necessary rules.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "replace",
      "type" : "function",
      "desc" : "Replaces the passed element with this element",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The element to replace",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "select",
      "type" : "function",
      "desc" : "Creates a {@link Roo.CompositeElement} for child nodes based on the passed CSS selector (the selector should not contain an id).",
      "sig" : "(selector, unique)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The CSS selector",
          "isOptional" : false
        },
        {
          "name" : "unique",
          "type" : "Boolean",
          "desc" : "(optional) True to create a unique Roo.Element for each child (defaults to false, which creates a single shared flyweight object)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "CompositeElement/CompositeElementLite",
          "desc" : "The composite element"
        }
      ]
    },
    {
      "name" : "isMasked",
      "type" : "function",
      "desc" : "Returns true if this element is masked",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getUpdateManager",
      "type" : "function",
      "desc" : "Gets this element's UpdateManager",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.UpdateManager",
          "desc" : "The UpdateManager"
        }
      ]
    },
    {
      "name" : "insertHtml",
      "type" : "function",
      "desc" : "Inserts an html fragment into this element",
      "sig" : "(where, html, returnEl)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "where",
          "type" : "String",
          "desc" : "Where to insert the html in relation to the this element - beforeBegin, afterBegin, beforeEnd, afterEnd.",
          "isOptional" : false
        },
        {
          "name" : "html",
          "type" : "String",
          "desc" : "The HTML fragment",
          "isOptional" : false
        },
        {
          "name" : "returnEl",
          "type" : "Boolean",
          "desc" : "True to return an Roo.Element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement/Roo.Element",
          "desc" : "The inserted node (or nearest related if more than 1 inserted)"
        }
      ]
    },
    {
      "name" : "mask",
      "type" : "function",
      "desc" : "Puts a mask over this element to disable user interaction. Requires core.css.\nThis method can only be applied to elements which accept child nodes.",
      "sig" : "(msg, msgCls)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "msg",
          "type" : "String",
          "desc" : "(optional) A message to display in the mask",
          "isOptional" : false
        },
        {
          "name" : "msgCls",
          "type" : "String",
          "desc" : "(optional) A css class to apply to the msg element - use no-spinner to hide the spinner on bootstrap",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "The mask  element"
        }
      ]
    },
    {
      "name" : "getTop",
      "type" : "function",
      "desc" : "Gets the top Y coordinate",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "True to get the local css position instead of page coordinate",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getBottom",
      "type" : "function",
      "desc" : "Gets the bottom Y coordinate of the element (element Y position + element height)",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "True to get the local css position instead of page coordinate",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getRight",
      "type" : "function",
      "desc" : "Gets the right X coordinate of the element (element X position + element width)",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "True to get the local css position instead of page coordinate",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "beginMeasure",
      "type" : "function",
      "desc" : "Temporarily enables offsets (width,height,x,y) for an element with display:none, use endMeasure() when done.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "appendTo",
      "type" : "function",
      "desc" : "Appends this element to the passed element",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The new parent element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "fly",
      "type" : "function",
      "desc" : "Gets the globally shared flyweight Element, with the passed node as the active element. Do not store a reference to this element -\nthe dom node can be overwritten by other code.",
      "sig" : "(el, named)",
      "static" : true,
      "memberOf" : "Roo.Element",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement",
          "desc" : "The dom node or id",
          "isOptional" : false
        },
        {
          "name" : "named",
          "type" : "String",
          "desc" : "(optional) Allows for creation of named reusable flyweights to\n                                 prevent conflicts (e.g. internally Roo uses \"_internal\")",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "The shared Element object"
        }
      ]
    },
    {
      "name" : "hasClass",
      "type" : "function",
      "desc" : "Checks if the specified CSS class exists on this element's DOM node.",
      "sig" : "(className)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "className",
          "type" : "String",
          "desc" : "The CSS class to check for",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the class exists, else false"
        }
      ]
    },
    {
      "name" : "findScrollableParent",
      "type" : "function",
      "desc" : "Looks at  the scrollable parent element",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "fitToParent",
      "type" : "function",
      "desc" : "Sizes this element to its parent element's dimensions performing\nneccessary box adjustments.",
      "sig" : "(monitorResize, targetParent)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "monitorResize",
          "type" : "Boolean",
          "desc" : "(optional) If true maintains the fit when the browser window is resized.",
          "isOptional" : false
        },
        {
          "name" : "targetParent",
          "type" : "String/HTMLElment/Element",
          "desc" : "(optional) The target parent, default to the parentNode.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setXY",
      "type" : "function",
      "desc" : "Sets the position of the element in page coordinates, regardless of how the element is positioned.\nThe element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "(pos, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "pos",
          "type" : "Array",
          "desc" : "Contains X & Y [x, y] values for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getXY",
      "type" : "function",
      "desc" : "Gets the current position of the element based on page coordinates.  Element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "The XY position of the element"
        }
      ]
    },
    {
      "name" : "unselectable",
      "type" : "function",
      "desc" : "Disables text selection for this element (normalized across browsers)",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "blur",
      "type" : "function",
      "desc" : "Tries to blur the element. Any exceptions are caught and ignored.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setRight",
      "type" : "function",
      "desc" : "Sets the element's CSS right style.",
      "sig" : "(right)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "right",
          "type" : "String",
          "desc" : "The right CSS property value",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "findParentNode",
      "type" : "function",
      "desc" : "Looks at parent nodes for a match of the passed simple selector (e.g. div.some-class or span:first-child)",
      "sig" : "(selector, maxDepth, returnEl)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The simple selector to test",
          "isOptional" : false
        },
        {
          "name" : "maxDepth",
          "type" : "Number/String/HTMLElement/Element",
          "desc" : "(optional) The max depth to\n                search as a number or element (defaults to 10 || document.body)",
          "isOptional" : false
        },
        {
          "name" : "returnEl",
          "type" : "Boolean",
          "desc" : "(optional) True to return a Roo.Element object instead of DOM node",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement",
          "desc" : "The matching DOM node (or null if no match was found)"
        }
      ]
    },
    {
      "name" : "position",
      "type" : "function",
      "desc" : "Initializes positioning on this element. If a desired position is not passed, it will make the\nthe element positioned relative IF it is not already positioned.",
      "sig" : "(pos, zIndex, x, y)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "pos",
          "type" : "String",
          "desc" : "(optional) Positioning to use \"relative\", \"absolute\" or \"fixed\"",
          "isOptional" : false
        },
        {
          "name" : "zIndex",
          "type" : "Number",
          "desc" : "(optional) The zIndex to apply",
          "isOptional" : false
        },
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "(optional) Set the page X position",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "(optional) Set the page Y position",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getFrameWidth",
      "type" : "function",
      "desc" : "Returns the sum width of the padding and borders for the passed \"sides\". See getBorderWidth()\n         for more information about the sides.",
      "sig" : "(sides)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "sides",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "setLocation",
      "type" : "function",
      "desc" : "Sets the position of the element in page coordinates, regardless of how the element is positioned.\nThe element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "(x, y, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "X value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "Y value for new position (coordinates are page-based)",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "unclip",
      "type" : "function",
      "desc" : "Return clipping (overflow) to original clipping before clip() was called",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "set",
      "type" : "function",
      "desc" : "Sets the passed attributes as attributes of this element (a style attribute can be a string, object or function)",
      "sig" : "(o, useSet)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Object",
          "desc" : "The object with the attributes",
          "isOptional" : false
        },
        {
          "name" : "useSet",
          "type" : "Boolean",
          "desc" : "(optional) false to override the default setAttribute to use expandos.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setDisplayed",
      "type" : "function",
      "desc" : "Sets the CSS display property. Uses originalDisplay if the specified value is a boolean true.",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "Boolean",
          "desc" : "Boolean value to display the element using its default display, or a string to set the display directly",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "insertFirst",
      "type" : "function",
      "desc" : "Inserts (or creates) an element (or DomHelper config) as the first child of the this element",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element/Object",
          "desc" : "The id or element to insert or a DomHelper config to create and insert",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The new child"
        }
      ]
    },
    {
      "name" : "animate",
      "type" : "function",
      "desc" : "Perform animation on this element.",
      "sig" : "(args, duration, onComplete, easing, animType)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "args",
          "type" : "Object",
          "desc" : "The YUI animation control args",
          "isOptional" : false
        },
        {
          "name" : "duration",
          "type" : "Float",
          "desc" : "(optional) How long the animation lasts in seconds (defaults to .35)",
          "isOptional" : false
        },
        {
          "name" : "onComplete",
          "type" : "Function",
          "desc" : "(optional) Function to call when animation completes",
          "isOptional" : false
        },
        {
          "name" : "easing",
          "type" : "String",
          "desc" : "(optional) Easing method to use (defaults to 'easeOut')",
          "isOptional" : false
        },
        {
          "name" : "animType",
          "type" : "String",
          "desc" : "(optional) 'run' is the default. Can also be 'color', 'motion', or 'scroll'",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "enableDisplayMode",
      "type" : "function",
      "desc" : "Convenience method for setVisibilityMode(Element.DISPLAY)",
      "sig" : "(display)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "display",
          "type" : "String",
          "desc" : "(optional) What to set display to when visible",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getComputedWidth",
      "type" : "function",
      "desc" : "Returns either the offsetWidth or the width of this element based on CSS width adjusted by padding or borders\nwhen needed to simulate offsetWidth when offsets aren't available. This may not work on display:none elements\nif a width has not been set using CSS.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "clip",
      "type" : "function",
      "desc" : "Store the current overflow setting and clip overflow on the element - use {@link #unclip} to remove",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setVisibilityMode",
      "type" : "function",
      "desc" : "Sets the element's visibility mode. When setVisible() is called it\nwill use this to determine whether to set the visibility or the display property.",
      "sig" : "(visMode)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "visMode",
          "type" : "",
          "desc" : "Element.VISIBILITY or Element.DISPLAY",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getColor",
      "type" : "function",
      "desc" : "Return the CSS color for the specified CSS attribute. rgb, 3 digit (like #fff) and valid values\nare convert to standard 6 digit hex color.",
      "sig" : "(attr, defaultValue, prefix)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "attr",
          "type" : "String",
          "desc" : "The css attribute",
          "isOptional" : false
        },
        {
          "name" : "defaultValue",
          "type" : "String",
          "desc" : "The default value to use when a valid color isn't found",
          "isOptional" : false
        },
        {
          "name" : "prefix",
          "type" : "String",
          "desc" : "(optional) defaults to #. Use an empty string when working with\nYUI color anims.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "insertSibling",
      "type" : "function",
      "desc" : "Inserts (or creates) the passed element (or DomHelper config) as a sibling of this element",
      "sig" : "(el, where, returnDom)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element/Object",
          "desc" : "The id or element to insert or a DomHelper config to create and insert",
          "isOptional" : false
        },
        {
          "name" : "where",
          "type" : "String",
          "desc" : "(optional) 'before' or 'after' defaults to before",
          "isOptional" : false
        },
        {
          "name" : "returnDom",
          "type" : "Boolean",
          "desc" : "(optional) True to return the raw DOM element instead of Roo.Element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "the inserted Element"
        }
      ]
    },
    {
      "name" : "removeListener",
      "type" : "function",
      "desc" : "Removes an event handler from this element",
      "sig" : "(eventName, fn, scope)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "the type of event to remove",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "the method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Function",
          "desc" : "(needed for svg fake listeners)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "applyStyles",
      "type" : "function",
      "desc" : "More flexible version of {@link #setStyle} for setting style properties.",
      "sig" : "(styles)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "styles",
          "type" : "String/Object/Function",
          "desc" : "A style specification string, e.g. \"width:100px\", or object in the form {width:\"100px\"}, or\na function which returns such a specification.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getPrevSibling",
      "type" : "function",
      "desc" : "Gets the previous sibling, skipping text nodes",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement",
          "desc" : "The previous sibling or null"
        }
      ]
    },
    {
      "name" : "setBox",
      "type" : "function",
      "desc" : "Sets the element's box. Use getBox() on another element to get a box obj. If animate is true then width, height, x and y will be animated concurrently.",
      "sig" : "(box, adjust, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "box",
          "type" : "Object",
          "desc" : "The box to fill {x, y, width, height}",
          "isOptional" : false
        },
        {
          "name" : "adjust",
          "type" : "Boolean",
          "desc" : "(optional) Whether to adjust for box-model issues automatically",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "initDDProxy",
      "type" : "function",
      "desc" : "Initializes a {@link Roo.dd.DDProxy} object for this element.",
      "sig" : "(group, config, overrides)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "group",
          "type" : "String",
          "desc" : "The group the DDProxy object is member of",
          "isOptional" : false
        },
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "The DDProxy config object",
          "isOptional" : false
        },
        {
          "name" : "overrides",
          "type" : "Object",
          "desc" : "An object containing methods to override/implement on the DDProxy object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.dd.DDProxy",
          "desc" : "The DDProxy object"
        }
      ]
    },
    {
      "name" : "setX",
      "type" : "function",
      "desc" : "Sets the X position of the element based on page coordinates.  Element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "(The, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "The",
          "type" : "Number",
          "desc" : "X position of the element",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setY",
      "type" : "function",
      "desc" : "Sets the Y position of the element based on page coordinates.  Element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false).",
      "sig" : "(The, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "The",
          "type" : "Number",
          "desc" : "Y position of the element",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) True for the default animation, or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "query",
      "type" : "function",
      "desc" : "Selects child nodes based on the passed CSS selector (the selector should not contain an id).",
      "sig" : "(selector)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The CSS selector",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "An array of the matched nodes"
        }
      ]
    },
    {
      "name" : "getAnchorXY",
      "type" : "function",
      "desc" : "Gets the x,y coordinates specified by the anchor position on the element.",
      "sig" : "(anchor, size, local)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "anchor",
          "type" : "String",
          "desc" : "(optional) The specified anchor position (defaults to \"c\").  See {@link #alignTo} for details on supported anchor positions.",
          "isOptional" : false
        },
        {
          "name" : "size",
          "type" : "Object",
          "desc" : "(optional) An object containing the size to use for calculating anchor position\n                      {width: (target width), height: (target height)} (defaults to the element's current size)",
          "isOptional" : false
        },
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "(optional) True to get the local (element top/left-relative) anchor position instead of page coordinates",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "[x, y] An array containing the element's x and y coordinates"
        }
      ]
    },
    {
      "name" : "initDD",
      "type" : "function",
      "desc" : "Initializes a {@link Roo.dd.DD} drag drop object for this element.",
      "sig" : "(group, config, overrides)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "group",
          "type" : "String",
          "desc" : "The group the DD object is member of",
          "isOptional" : false
        },
        {
          "name" : "config",
          "type" : "Object",
          "desc" : "The DD config object",
          "isOptional" : false
        },
        {
          "name" : "overrides",
          "type" : "Object",
          "desc" : "An object containing methods to override/implement on the DD object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.dd.DD",
          "desc" : "The DD object"
        }
      ]
    },
    {
      "name" : "getComputedHeight",
      "type" : "function",
      "desc" : "Returns either the offsetHeight or the height of this element based on CSS height adjusted by padding or borders\nwhen needed to simulate offsetHeight when offsets aren't available. This may not work on display:none elements\nif a height has not been set using CSS.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "is",
      "type" : "function",
      "desc" : "Returns true if this element matches the passed simple selector (e.g. div.some-class or span:first-child)",
      "sig" : "(selector)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selector",
          "type" : "String",
          "desc" : "The simple selector to test",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if this element matches the selector, else false"
        }
      ]
    },
    {
      "name" : "move",
      "type" : "function",
      "desc" : "Move this element relative to its current position.",
      "sig" : "(direction, distance, animate)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "direction",
          "type" : "String",
          "desc" : "Possible values are: \"l\",\"left\" - \"r\",\"right\" - \"t\",\"top\",\"up\" - \"b\",\"bottom\",\"down\".",
          "isOptional" : false
        },
        {
          "name" : "distance",
          "type" : "Number",
          "desc" : "How far to move the element in pixels",
          "isOptional" : false
        },
        {
          "name" : "animate",
          "type" : "Boolean/Object",
          "desc" : "(optional) true for the default animation or a standard Element animation config object",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "remove",
      "type" : "function",
      "desc" : "Removes this element from the DOM and deletes it from the cache",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "getNextSibling",
      "type" : "function",
      "desc" : "Gets the next sibling, skipping text nodes",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "HTMLElement",
          "desc" : "The next sibling or null"
        }
      ]
    },
    {
      "name" : "getStyle",
      "type" : "function",
      "desc" : "Normalizes currentStyle and computedStyle. This is not YUI getStyle, it is an optimised version.",
      "sig" : "(property)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "property",
          "type" : "String",
          "desc" : "The style property whose value is returned.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "The current value of the style property for this element."
        }
      ]
    },
    {
      "name" : "isBorderBox",
      "type" : "function",
      "desc" : "Tests various css rules/browsers to determine if this element uses a border box",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "getPadding",
      "type" : "function",
      "desc" : "Gets the width of the padding(s) for the specified side(s)",
      "sig" : "(side)",
      "static" : false,
      "memberOf" : "Roo.Element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "side",
          "type" : "String",
          "desc" : "Can be t, l, r, b or any combination of those to add multiple values. For example,\npassing lr would get the padding (l)eft + the padding (r)ight.",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Number",
          "desc" : "The padding of the sides passed added together"
        }
      ]
    }
  ],
  "events" : []
}