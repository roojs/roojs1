{
  "name" : "Roo.data.ScriptTagProxy",
  "augments" : [
  ],
  "desc" : "An implementation of Roo.data.DataProxy that reads a data object from a URL which may be in a domain\nother than the originating domain of the running page.<br><br>\n<p>\n<em>Note that if you are retrieving data from a page that is in a domain that is NOT the same as the originating domain\nof the running page, you must use this class, rather than DataProxy.</em><br><br>\n<p>\nThe content passed back from a server resource requested by a ScriptTagProxy is executable JavaScript\nsource code that is used as the source inside a &lt;script> tag.<br><br>\n<p>\nIn order for the browser to process the returned data, the server must wrap the data object\nwith a call to a callback function, the name of which is passed as a parameter by the ScriptTagProxy.\nBelow is a Java example for a servlet which returns data for either a ScriptTagProxy, or an HttpProxy\ndepending on whether the callback name was passed:\n<p>\n<pre><code>\nboolean scriptTag = false;\nString cb = request.getParameter(\"callback\");\nif (cb != null) {\n    scriptTag = true;\n    response.setContentType(\"text/javascript\");\n} else {\n    response.setContentType(\"application/x-json\");\n}\nWriter out = response.getWriter();\nif (scriptTag) {\n    out.write(cb + \"(\");\n}\nout.print(dataBlock.toJsonString());\nif (scriptTag) {\n    out.write(\");\");\n}\n</pre></code>",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "memberOf" : "ScriptTagProxy",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "A configuration object.",
      "isOptional" : false
    }
  ],
  "returns" : [
  ],
  "config" : [
    {
      "name" : "timeout",
      "type" : "Number",
      "desc" : "(Optional) The number of milliseconds to wait for a response. Defaults to 30 seconds.",
      "memberOf" : "Roo.data.ScriptTagProxy",
      "optvals" : [
      ]
    },
    {
      "name" : "nocache",
      "type" : "Boolean",
      "desc" : "(Optional) Defaults to true. Disable cacheing by adding a unique parameter\nname to the request.",
      "memberOf" : "Roo.data.ScriptTagProxy",
      "optvals" : [
      ]
    },
    {
      "name" : "callbackParam",
      "type" : "String",
      "desc" : "(Optional) The name of the parameter to pass to the server which tells\nthe server the name of the callback function set up by the load call to process the returned data object.\nDefaults to \"callback\".<p>The server-side processing must read this parameter value, and generate\njavascript output which calls this named function passing the data object as its only parameter.",
      "memberOf" : "Roo.data.ScriptTagProxy",
      "optvals" : [
      ]
    },
    {
      "name" : "url",
      "type" : "String",
      "desc" : "The URL from which to request the data object.",
      "memberOf" : "Roo.data.ScriptTagProxy",
      "optvals" : [
      ]
    }
  ],
  "methods" : [
    {
      "name" : "abort",
      "desc" : "Abort the current server request.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.data.ScriptTagProxy",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
      ],
      "returns" : [
      ]
    },
    {
      "name" : "load",
      "desc" : "Load data from the configured URL, read the data object into\na block of Roo.data.Records using the passed Roo.data.DataReader implementation, and\nprocess that block using the passed callback.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.data.ScriptTagProxy",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "params",
          "type" : "Object",
          "desc" : "An object containing properties which are to be used as HTTP parameters\nfor the request to the remote server.",
          "isOptional" : false
        },
        {
          "name" : "reader",
          "type" : "Roo.data.DataReader",
          "desc" : "The Reader object which converts the data\nobject into a block of Roo.data.Records.",
          "isOptional" : false
        },
        {
          "name" : "callback",
          "type" : "Function",
          "desc" : "The function into which to pass the block of Roo.data.Records.\nThe function must be passed <ul>\n<li>The Record block object</li>\n<li>The \"arg\" argument from the load function</li>\n<li>A boolean success indicator</li>\n</ul>",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "The scope in which to call the callback",
          "isOptional" : false
        },
        {
          "name" : "arg",
          "type" : "Object",
          "desc" : "An optional argument which is passed to the callback as its second parameter.",
          "isOptional" : false
        }
      ],
      "returns" : [
      ]
    }
  ],
  "events" : [
  ]
}