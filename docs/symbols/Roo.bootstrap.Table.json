{
  "name" : "Roo.bootstrap.Table",
  "augments" : [
    "Roo.bootstrap.Component",
    "Roo.Component",
    "Roo.util.Observable"
  ],
  "desc" : "Bootstrap Table class.  This class represents the primary interface of a component based grid control.\nSimilar to Roo.grid.Grid\n<pre><code>\n var table = Roo.factory({\n    xtype : 'Table',\n    xns : Roo.bootstrap,\n    autoSizeColumns: true,\n    \n    \n    store : {\n        xtype : 'Store',\n        xns : Roo.data,\n        remoteSort : true,\n        sortInfo : { direction : 'ASC', field: 'name' },\n        proxy : {\n           xtype : 'HttpProxy',\n           xns : Roo.data,\n           method : 'GET',\n           url : 'https://example.com/some.data.url.json'\n        },\n        reader : {\n           xtype : 'JsonReader',\n           xns : Roo.data,\n           fields : [ 'id', 'name', whatever' ],\n           id : 'id',\n           root : 'data'\n        }\n    },\n    cm : [\n        {\n            xtype : 'ColumnModel',\n            xns : Roo.grid,\n            align : 'center',\n            cursor : 'pointer',\n            dataIndex : 'is_in_group',\n            header : \"Name\",\n            sortable : true,\n            renderer : function(v, x , r) {  \n            \n                return String.format(\"{0}\", v)\n            }\n            width : 3\n        } // more columns..\n    ],\n    selModel : {\n        xtype : 'RowSelectionModel',\n        xns : Roo.bootstrap.Table\n        // you can add listeners to catch selection change here....\n    }\n     \n\n });\n // set any options\n grid.render(Roo.get(\"some-div\"));\n</code></pre>\n\nCurrently the Table  uses multiple headers to try and handle XL / Medium etc... styling",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "memberOf" : "Table",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "The config object",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "config" : [
    {
      "name" : "footerShow",
      "type" : "Boolean",
      "desc" : "e) generate tfoot, default true",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "hideMode",
      "type" : "String",
      "desc" : "y)\nHow this component should hidden. Supported values are\n\"visibility\" (css visibility), \"offsets\" (negative offset position) and\n\"display\" (css display) - defaults to \"display\".",
      "memberOf" : "Roo.Component",
      "optvals" : [
        "display",
        "visibility"
      ]
    },
    {
      "name" : "auto_hide_footer",
      "type" : "Boolean",
      "desc" : "auto hide footer if only one page (default false)",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "scrollBody",
      "type" : "Boolean",
      "desc" : "e) default false - body scrolled / fixed header",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "cm[]",
      "type" : "Roo.grid.ColumnModel",
      "desc" : "A column for th grid.",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "xattr",
      "type" : "Object",
      "desc" : "extra attributes to add to 'element' (used by builder to store stuff.)",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "name",
      "type" : "string",
      "desc" : "Specifies name attribute",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "minColumnWidth",
      "type" : "Number",
      "desc" : "default 50 pixels minimum column width",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "bordered",
      "type" : "boolean",
      "desc" : "Add borders to the table",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "tooltip",
      "type" : "string",
      "desc" : "Text for the tooltip",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "allowDomMove",
      "type" : "Boolean",
      "desc" : "Whether the component can move the Dom node when rendering (defaults to true).",
      "memberOf" : "Roo.Component",
      "optvals" : []
    },
    {
      "name" : "condensed",
      "type" : "boolean",
      "desc" : "Format condensed",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "style",
      "type" : "String",
      "desc" : "any extra css",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "store",
      "type" : "Roo.data.Store|Roo.data.SimpleStore",
      "desc" : "The data store to use",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "cellSelection",
      "type" : "Boolean",
      "desc" : "e) default false",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "actionMode",
      "type" : "String",
      "desc" : "which property holds the element that used for  hide() / show() / disable() / enable()\ndefault is 'el' for forms you probably want to set this to fieldEl",
      "memberOf" : "Roo.Component",
      "optvals" : []
    },
    {
      "name" : "sm",
      "type" : "Roo.grid.RowSelectionModel|Roo.grid.CellSelectionModel",
      "desc" : "The selection model to use (cell selection is not supported yet)",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "listeners",
      "type" : "Object",
      "desc" : "list of events and functions to call for this object, \nFor example :\n<pre><code>\n    listeners :  { \n       'click' : function(e) {\n           ..... \n        } ,\n        .... \n    } \n  </code></pre>",
      "memberOf" : "Roo.util.Observable",
      "optvals" : []
    },
    {
      "name" : "striped",
      "type" : "boolean",
      "desc" : "Should the rows be alternative striped",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "container_method",
      "type" : "string",
      "desc" : "method to fetch parents container element (used by NavHeaderbar -  getHeaderChildContainer)",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "lazyLoad",
      "type" : "Boolean",
      "desc" : "auto load data while scrolling to the end (default false)",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "footer",
      "type" : "Roo.bootstrap.PagingToolbar",
      "desc" : "a paging toolbar",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "cls",
      "type" : "String",
      "desc" : "table class",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "headerShow",
      "type" : "Boolean",
      "desc" : "e) generate thead, default true",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "loadMask",
      "type" : "Boolean",
      "desc" : "e) default false",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "hover",
      "type" : "boolean",
      "desc" : "Add hover highlighting",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "can_build_overlaid",
      "type" : "Boolean",
      "desc" : "True if element can be rebuild from a HTML page",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "disableClass",
      "type" : "String",
      "desc" : "CSS class added to the component when it is disabled (defaults to \"x-item-disabled\").",
      "memberOf" : "Roo.Component",
      "optvals" : []
    },
    {
      "name" : "visibilityEl",
      "type" : "string|object",
      "desc" : "t) What element to use for visibility (@see getVisibilityEl())",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : [
        "el",
        "parent"
      ]
    },
    {
      "name" : "enableColumnResize",
      "type" : "Boolean",
      "desc" : "default true if columns can be resized (drag/drop)",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    },
    {
      "name" : "dataId",
      "type" : "string",
      "desc" : "cutomer id",
      "memberOf" : "Roo.bootstrap.Component",
      "optvals" : []
    },
    {
      "name" : "rowSelection",
      "type" : "Boolean",
      "desc" : "e) default false",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : [
        "true",
        "false"
      ]
    },
    {
      "name" : "responsive",
      "type" : "boolean",
      "desc" : "default false - if this is on, columns are rendered with col-xs-4 etc. classes, otherwise columns will be sized by CSS,\n               also adds table-responsive (see bootstrap docs for details)",
      "memberOf" : "Roo.bootstrap.Table",
      "optvals" : []
    }
  ],
  "methods" : [
    {
      "name" : "setRowVisibility",
      "desc" : "Show or hide a row.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "to show or hide",
          "isOptional" : false
        },
        {
          "name" : "state",
          "type" : "Boolean",
          "desc" : "hide",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getRowIndex",
      "desc" : "get the Row Index from a dom element.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "row",
          "type" : "Roo.Element",
          "desc" : "The row to look for",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "ensureVisible",
      "desc" : "Scrolls the specified cell into view",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "row",
          "type" : "Number",
          "desc" : "The row index",
          "isOptional" : false
        },
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "hscroll",
          "type" : "Boolean",
          "desc" : "false to disable horizontal scrolling",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getCellIndex",
      "desc" : "get the Column Index from a dom element. (using regex on x-hcol-{colid})",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "cell",
          "type" : "domElement",
          "desc" : "to look for",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getHeaderIndex",
      "desc" : "get the header TH element for columnIndex",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "focusRow",
      "desc" : "Focuses the specified row.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "row",
          "type" : "Number",
          "desc" : "The row index",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getGridEl",
      "desc" : "Returns the grid's underlying element = used by panel.Grid",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "The element"
        }
      ]
    },
    {
      "name" : "autoSize",
      "desc" : "Forces a resize - used by panel.Grid",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Element",
          "desc" : "The element"
        }
      ]
    },
    {
      "name" : "clear",
      "desc" : "Remove all rows",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "focusCell",
      "desc" : "Focuses the specified cell.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "row",
          "type" : "Number",
          "desc" : "The row index",
          "isOptional" : false
        },
        {
          "name" : "col",
          "type" : "Number",
          "desc" : "The column index",
          "isOptional" : false
        },
        {
          "name" : "hscroll",
          "type" : "Boolean",
          "desc" : "false to disable horizontal scrolling",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "tooltipEl",
      "desc" : "Fetch the element to display the tooltip on.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "defaults to this.el"
        }
      ]
    },
    {
      "name" : "hide",
      "desc" : "Hide a component - adds 'hidden' class",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "show",
      "desc" : "Show a component - removes 'hidden' class",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setVisibilityEl",
      "desc" : "Set the element that will be used to show or hide",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "getVisibilityEl",
      "desc" : "Get the element that will be used to show or hide",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "initEvents",
      "desc" : "Initialize Events for the element",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "getChildContainer",
      "desc" : "Fetch the element to add children to",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "defaults to this.el"
        }
      ]
    },
    {
      "name" : "getId",
      "desc" : "Returns the id of this component.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "render",
      "desc" : "If this is a lazy rendering component, render it to its container element.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "container",
          "type" : "String/HTMLElement/Element",
          "desc" : "(optional) The element this component should be rendered into. If it is being applied to existing markup, this should be left off.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "destroy",
      "desc" : "Destroys this component by purging any event listeners, removing the component's element from the DOM,\nremoving the component from its {@link Roo.Container} (if applicable) and unregistering it from {@link Roo.ComponentMgr}.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "isVisible",
      "desc" : "Returns true if this component is visible.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setDisabled",
      "desc" : "Convenience function for setting disabled/enabled by boolean.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "disabled",
          "type" : "Boolean",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "focus",
      "desc" : "Try to focus this component.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "selectText",
          "type" : "Boolean",
          "desc" : "True to also select the text in this component (if applicable)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "enable",
      "desc" : "Enable this component.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setVisible",
      "desc" : "Convenience function to hide or show this component by boolean.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "visible",
          "type" : "Boolean",
          "desc" : "True to show, false to hide",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "disable",
      "desc" : "Disable this component.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getEl",
      "desc" : "Returns the underlying {@link Roo.Element}.",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The element"
        }
      ]
    },
    {
      "name" : "purgeListeners",
      "desc" : "Removes all listeners for this object",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "on",
      "desc" : "Appends an event handler to this element (shorthand for addListener)",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "un",
      "desc" : "Removes a listener (shorthand for removeListener)",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addEvents",
      "desc" : "Used to define events on this Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "object",
          "type" : "Object",
          "desc" : "The object with the events defined",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "releaseCapture",
      "desc" : "Removes <b>all</b> added captures from the Observable.",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to release",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "removeListener",
      "desc" : "Removes a listener",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "fireEvent",
      "desc" : "Fires the specified event with the passed parameters (minus the event name).",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "args",
          "type" : "Object...",
          "desc" : "Variable number of parameters are passed to handlers",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "returns false if any of the handlers return false otherwise it returns true"
        }
      ]
    },
    {
      "name" : "hasListener",
      "desc" : "Checks to see if this object has any listeners for a specified event",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The name of the event to check for",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the event is being listened for, else false"
        }
      ]
    },
    {
      "name" : "capture",
      "desc" : "Starts capture on the specified Observable. All events will be passed\nto the supplied function with the event name + standard signature of the event\n<b>before</b> the event is fired. If the supplied function returns false,\nthe event will not fire.",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to capture",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The function to call",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the fn",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addListener",
      "desc" : "Appends an event handler to this component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "memberOf" : "Roo.util.Observable",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional) An object containing handler configuration\nproperties. This may contain any of the following properties:<ul>\n<li>scope {Object} The scope in which to execute the handler function. The handler function's \"this\" context.</li>\n<li>delay {Number} The number of milliseconds to delay the invocation of the handler after te event fires.</li>\n<li>single {Boolean} True to add a handler to handle just the next firing of the event, and then remove itself.</li>\n<li>buffer {Number} Causes the handler to be scheduled to run in an {@link Roo.util.DelayedTask} delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</li>\n</ul><br>\n<p>\n<b>Combining Options</b><br>\nUsing the options argument, it is possible to combine different types of listeners:<br>\n<br>\nA normalized, delayed, one-time listener that auto stops the event and passes a custom argument (forumId)\n\t\t<pre><code>\n\t\tel.on('click', this.onClick, this, {\n \t\t\tsingle: true,\n    \t\tdelay: 100,\n    \t\tforumId: 4\n\t\t});\n\t\t</code></pre>\n<p>\n<b>Attaching multiple handlers in 1 call</b><br>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.\n<pre><code>\n\t\tel.on({\n\t\t\t'click': {\n        \t\tfn: this.onClick,\n        \t\tscope: this,\n        \t\tdelay: 100\n    \t\t}, \n    \t\t'mouseover': {\n        \t\tfn: this.onMouseOver,\n        \t\tscope: this\n    \t\t},\n    \t\t'mouseout': {\n        \t\tfn: this.onMouseOut,\n        \t\tscope: this\n    \t\t}\n\t\t});\n\t\t</code></pre>\n<p>\nOr a shorthand syntax which passes the same scope object to all handlers:\n     \t<pre><code>\n\t\tel.on({\n\t\t\t'click': this.onClick,\n    \t\t'mouseover': this.onMouseOver,\n    \t\t'mouseout': this.onMouseOut,\n    \t\tscope: this\n\t\t});\n\t\t</code></pre>",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ],
  "events" : [
    {
      "name" : "rowsrendered",
      "desc" : "Fires when all the  rows have been rendered",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "headercontextmenu",
      "desc" : "Fires when a header is right clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "rowdblclick",
      "desc" : "Fires when a row is double clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "contextmenu",
      "desc" : "The raw contextmenu event for the entire grid.",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "mousedown",
      "desc" : "The raw mousedown event for the entire grid.",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "rowcontextmenu",
      "desc" : "Fires when a row is right clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "cellcontextmenu",
      "desc" : "Fires when a cell is right clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "cellIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "celldblclick",
      "desc" : "Fires when a cell is double clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "rowclass",
      "desc" : "Fires when a row is rendered, so you can change add a style to it.",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowcfg",
          "type" : "Object",
          "desc" : "contains record  rowIndex colIndex and rowClass - set rowClass to add a style.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "mouseover",
      "desc" : "Fires when a mouseover occur",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "mouseout",
      "desc" : "Fires when a mouseout occur",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "cellclick",
      "desc" : "Fires when a cell is clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "columnIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "rowclick",
      "desc" : "Fires when a row is clicked",
      "memberOf" : "Roo.bootstrap.Table",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Table",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "el",
          "type" : "Roo.Element",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "rowIndex",
          "type" : "Number",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "childrenrendered",
      "desc" : "Fires when the children have been rendered..",
      "memberOf" : "Roo.bootstrap.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.bootstrap.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforerender",
      "desc" : "Fires before the component is rendered. Return false to stop the render.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "disable",
      "desc" : "Fires after the component is disabled.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "render",
      "desc" : "Fires after the component is rendered.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "destroy",
      "desc" : "Fires after the component is destroyed.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "hide",
      "desc" : "Fires after the component is hidden.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforehide",
      "desc" : "Fires before the component is hidden. Return false to stop the hide.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "show",
      "desc" : "Fires after the component is shown.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforeshow",
      "desc" : "Fires before the component is shown.  Return false to stop the show.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "enable",
      "desc" : "Fires after the component is enabled.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforedestroy",
      "desc" : "Fires before the component is destroyed. Return false to stop the destroy.",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ]
}