{
  "name" : "Roo.form.Select",
  "augments" : [
    "Roo.form.TriggerField",
    "Roo.form.TextField",
    "Roo.form.Field",
    "Roo.BoxComponent",
    "Roo.Component",
    "Roo.util.Observable"
  ],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "A combobox control with support for autocomplete, remote-loading, paging and many other features.",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "Select",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "config",
      "type" : "Object",
      "desc" : "Configuration options",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [
    {
      "name" : "triggerClass",
      "type" : "String",
      "desc" : "An additional CSS class used to style the trigger button.  The trigger will always get the\nclass 'x-form-trigger' and triggerClass will be <b>appended</b> if specified (defaults to 'x-form-arrow-trigger'\nwhich displays a downward arrow icon).",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "pageSize",
      "type" : "Number",
      "desc" : "If greater than 0, a paging toolbar is displayed in the footer of the dropdown list and the\nfilter queries will execute with page start and limit parameters.  Only applies when mode = 'remote' (defaults to 0)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "hideMode",
      "type" : "String",
      "desc" : "y)\nHow this component should hidden. Supported values are\n\"visibility\" (css visibility), \"offsets\" (negative offset position) and\n\"display\" (css display) - defaults to \"display",
      "memberOf" : "Roo.Component",
      "isOptional" : false,
      "optvals" : [
        "display",
        "visibility"
      ]
    },
    {
      "name" : "disableKeyFilter",
      "type" : "Boolean",
      "desc" : "True to disable input keystroke filtering (defaults to false)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "title",
      "type" : "String",
      "desc" : "If supplied, a header element is created containing this text and added into the top of\nthe dropdown list (defaults to undefined, with no header element)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "queryParam",
      "type" : "String",
      "desc" : "Name of the query as it will be passed on the querystring (defaults to 'query')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "disabled",
      "type" : "Boolean",
      "desc" : "True to disable the field (defaults to false).",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "resizable",
      "type" : "Boolean",
      "desc" : "True to add a resize handle to the bottom of the dropdown list (defaults to false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "validator",
      "type" : "Function",
      "desc" : "A custom validation function to be called during field validation (defaults to null).\nIf available, this function will be called only after the basic validators all return true, and will be passed the\ncurrent field value and expected to return boolean true if the value is valid or a string error message if invalid.",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "name",
      "type" : "String",
      "desc" : "The field's HTML name attribute.",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "editable",
      "type" : "Boolean",
      "desc" : "False to prevent the user from typing text directly into the field, just like a\ntraditional select (defaults to true)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "width",
      "type" : "Number",
      "desc" : "width (optional) size of component",
      "memberOf" : "Roo.BoxComponent",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "regexText",
      "type" : "String",
      "desc" : "The error text to display if {@link #regex} is used and the test fails during validation (defaults to \"\")",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "listWidth",
      "type" : "Number",
      "desc" : "The width in pixels of the dropdown list (defaults to the width of the ComboBox field)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "allowDomMove",
      "type" : "Boolean",
      "desc" : "Whether the component can move the Dom node when rendering (defaults to true).",
      "memberOf" : "Roo.Component",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "tpl",
      "type" : "String/Roo.Template",
      "desc" : "The template to use to render the output",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "typeAheadDelay",
      "type" : "Number",
      "desc" : "The length of time in milliseconds to wait until the typeahead text is displayed\nif typeAhead = true (defaults to 250)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "height",
      "type" : "Number",
      "desc" : "height (optional) size of component",
      "memberOf" : "Roo.BoxComponent",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "style",
      "type" : "String",
      "desc" : "css styles to add to component\neg. text-align:right;",
      "memberOf" : "Roo.Component",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "disableClear",
      "type" : "Boolean",
      "desc" : "Disable showing of clear button.",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "store",
      "type" : "Roo.data.Store",
      "desc" : "The data store to which this combo is bound (defaults to undefined)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "value",
      "type" : "Mixed",
      "desc" : "A value to initialize this field with.",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "emptyText",
      "type" : "String",
      "desc" : "The default text to display in an empty field - placeholder... (defaults to null).",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "defaultValue",
      "type" : "String",
      "desc" : "The value displayed after loading the store.",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "msgFx",
      "type" : "String",
      "desc" : "<b>Experimental</b> The effect used when displaying a validation message under the field (defaults to 'normal').",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "actionMode",
      "type" : "String",
      "desc" : "which property holds the element that used for  hide() / show() / disable() / enable()\ndefault is 'el' for forms you probably want to set this to fieldEl",
      "memberOf" : "Roo.Component",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "allQuery",
      "type" : "String",
      "desc" : "The text query to send to the server to return all records for the list with no filtering (defaults to '')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "minListWidth",
      "type" : "Number",
      "desc" : "The minimum width of the dropdown list in pixels (defaults to 70, will be ignored if\nlistWidth has a higher value)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "alwaysQuery",
      "type" : "Boolean",
      "desc" : "Disable caching of results, and always send query",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "msgTarget",
      "type" : "String",
      "desc" : "The location where error text should display.  Should be one of the following values (defaults to 'qtip'):\n<pre>\nValue         Description\n-----------   ----------------------------------------------------------------------\nqtip          Display a quick tip when the user hovers over the field\ntitle         Display a default browser title attribute popup\nunder         Add a block div beneath the field containing the error text\nside          Add an error icon to the right of the field with a popup on hover\n[element id]  Add the error text directly to the innerHTML of the specified element\n</pre>",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "maxLengthText",
      "type" : "String",
      "desc" : "Error text to display if the maximum length validation fails (defaults to \"The maximum length for this field is {maxLength}\")",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "minLengthText",
      "type" : "String",
      "desc" : "Error text to display if the minimum length validation fails (defaults to \"The minimum length for this field is {minLength}\")",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "listeners",
      "type" : "Object",
      "desc" : "list of events and functions to call for this object, \nFor example :\n<pre><code>\n    listeners :  { \n       'click' : function(e) {\n           ..... \n        } ,\n        .... \n    } \n  </code></pre>",
      "memberOf" : "Roo.util.Observable",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "shadow",
      "type" : "Boolean/String",
      "desc" : "True or \"sides\" for the default effect, \"frame\" for 4-way shadow, and \"drop\" for bottom-right",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "readOnly",
      "type" : "Boolean",
      "desc" : "True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute.",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "focusClass",
      "type" : "String",
      "desc" : "The CSS class to use when the field receives focus (defaults to \"x-form-focus\")",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "valueNotFoundText",
      "type" : "String",
      "desc" : "When using a name/value combo, if the value passed to setValue is not found in\nthe store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "displayField",
      "type" : "String",
      "desc" : "The underlying data field name to bind to this CombBox (defaults to undefined if\nmode = 'remote' or 'text' if mode = 'local')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "hiddenName",
      "type" : "String",
      "desc" : "If specified, a hidden form field with this name is dynamically generated to store the\nfield's data value (defaults to the underlying DOM element's name)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "selectedClass",
      "type" : "String",
      "desc" : "CSS class to apply to the selected item in the dropdown list (defaults to 'x-combo-selected')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "hideTrigger",
      "type" : "Boolean",
      "desc" : "True to hide the trigger element and display only the base text field (defaults to false)",
      "memberOf" : "Roo.form.TriggerField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "cls",
      "type" : "String",
      "desc" : "A CSS class to apply to the field's underlying element.",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "validateOnBlur",
      "type" : "Boolean",
      "desc" : "Whether the field should validate when it loses focus (defaults to true).",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "listAlign",
      "type" : "String",
      "desc" : "A valid anchor position value. See {@link Roo.Element#alignTo} for details on supported\nanchor positions (defaults to 'tl-bl')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "forceSelection",
      "type" : "Boolean",
      "desc" : "True to restrict the selected value to one of the values in the list, false to\nallow the user to set arbitrary text into the field (defaults to false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "typeAhead",
      "type" : "Boolean",
      "desc" : "True to populate and autoselect the remainder of the text being typed after a configurable\ndelay (typeAheadDelay) if it matches a known value (defaults to false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "triggerAction",
      "type" : "String",
      "desc" : "The action to execute when the trigger field is activated.  Use 'all' to run the\nquery specified by the allQuery config option (defaults to 'query')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "inputType",
      "type" : "String",
      "desc" : "The type attribute for input fields -- e.g. radio, text, password (defaults to \"text\").",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "fieldClass",
      "type" : "String",
      "desc" : "The default CSS class for the field (defaults to \"x-form-field\")",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "autoCreate",
      "type" : "Boolean/Object",
      "desc" : "A DomHelper element spec, or true for a default element spec (defaults to:\n{tag: \"input\", type: \"text\", size: \"24\", autocomplete: \"off\"})",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "minChars",
      "type" : "Number",
      "desc" : "The minimum number of characters the user must type before autocomplete and typeahead activate\n(defaults to 4, does not apply if editable = false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "growMin",
      "type" : "Number",
      "desc" : "",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "allowLeadingSpace",
      "type" : "Boolean",
      "desc" : "True to prevent the stripping of leading white space",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "invalidClass",
      "type" : "String",
      "desc" : "The CSS class to use when marking a field invalid (defaults to \"x-form-invalid\")",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "maskRe",
      "type" : "String",
      "desc" : "An input mask regular expression that will be used to filter keystrokes that don't match (defaults to null)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "vtype",
      "type" : "String",
      "desc" : "A validation type name as defined in {@link Roo.form.VTypes} (defaults to null)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "validationEvent",
      "type" : "String/Boolean",
      "desc" : "The event that should initiate field validation. Set to false to disable\n      automatic validation (defaults to \"keyup\").",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "blockFocus",
      "type" : "Boolean",
      "desc" : "Prevents all focus calls, so it can work with things like HTML edtor bar",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "fieldLabel",
      "type" : "String",
      "desc" : "Label to use when rendering a form.",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "selectOnFocus",
      "type" : "Boolean",
      "desc" : "True to select any existing text in the field immediately on focus.  Only applies\nwhen editable = true (defaults to false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "blankText",
      "type" : "String",
      "desc" : "Error text to display if the allow blank validation fails (defaults to \"This field is required\")",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "validationDelay",
      "type" : "Number",
      "desc" : "The length of time in milliseconds after user input begins until validation is initiated (defaults to 250)",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "disableClass",
      "type" : "String",
      "desc" : "CSS class added to the component when it is disabled (defaults to \"x-item-disabled\").",
      "memberOf" : "Roo.Component",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "tabIndex",
      "type" : "Number",
      "desc" : "The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined).",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "growMax",
      "type" : "Number",
      "desc" : "",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "transform",
      "type" : "String/HTMLElement/Element",
      "desc" : "The id, DOM node or element of an existing select to convert to a ComboBox",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "listClass",
      "type" : "String",
      "desc" : "CSS class to apply to the dropdown list element (defaults to '')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "handleHeight",
      "type" : "Number",
      "desc" : "The height in pixels of the dropdown list resize handle if resizable = true (defaults to 8)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "regex",
      "type" : "RegExp",
      "desc" : "A JavaScript RegExp object to be tested against the field value during validation (defaults to null).\nIf available, this regex will be evaluated only after the basic validators all return true, and will be passed the\ncurrent field value.  If the test fails, the field will be marked invalid using {@link #regexText}.",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "grow",
      "type" : "Boolean",
      "desc" : "",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "minLength",
      "type" : "Number",
      "desc" : "Minimum input field length required (defaults to 0)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "queryDelay",
      "type" : "Number",
      "desc" : "The length of time in milliseconds to delay between the start of typing and sending the\nquery to filter the dropdown list (defaults to 500 if mode = 'remote' or 10 if mode = 'local')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "mode",
      "type" : "String",
      "desc" : "Set to 'local' if the ComboBox loads local data (defaults to 'remote' which loads from the server)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "allowBlank",
      "type" : "Boolean",
      "desc" : "False to validate that the value length > 0 (defaults to true)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "qtip",
      "type" : "String",
      "desc" : "Mouse over tip",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "maxHeight",
      "type" : "Number",
      "desc" : "The maximum height in pixels of the dropdown list before scrollbars are shown (defaults to 300)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "valueField",
      "type" : "String",
      "desc" : "The underlying data value name to bind to this CombBox (defaults to undefined if\nmode = 'remote' or 'value' if mode = 'local'). \nNote: use of a valueField requires the user make a selection\nin order for a value to be mapped.",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "loadingText",
      "type" : "String",
      "desc" : "The text to display in the dropdown list while data is loading.  Only applies\nwhen mode = 'remote' (defaults to 'Loading...')",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "maxLength",
      "type" : "Number",
      "desc" : "Maximum input field length allowed (defaults to Number.MAX_VALUE)",
      "memberOf" : "Roo.form.TextField",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "lazyRender",
      "type" : "Boolean",
      "desc" : "True to prevent the ComboBox from rendering until requested (should always be used when\nrendering into an Roo.Editor, defaults to false)",
      "memberOf" : "",
      "isOptional" : false,
      "optvals" : []
    },
    {
      "name" : "invalidText",
      "type" : "String",
      "desc" : "The error text to use when marking a field invalid and no message is provided (defaults to \"The value in this field is invalid\")",
      "memberOf" : "Roo.form.Field",
      "isOptional" : false,
      "optvals" : []
    }
  ],
  "methods" : [
    {
      "name" : "select",
      "type" : "function",
      "desc" : "Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
      "sig" : "(index, scrollIntoView)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "index",
          "type" : "Number",
          "desc" : "The zero-based index of the list item to select",
          "isOptional" : false
        },
        {
          "name" : "scrollIntoView",
          "type" : "Boolean",
          "desc" : "False to prevent the dropdown list from autoscrolling to display the\nselected item if it is not currently in view (defaults to true)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "collapse",
      "type" : "function",
      "desc" : "Hides the dropdown list if it is currently expanded. Fires the 'collapse' event on completion.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "clearValue",
      "type" : "function",
      "desc" : "Clears any text/value currently set in the field",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "selectByValue",
      "type" : "function",
      "desc" : "Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
      "sig" : "(value, scrollIntoView)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "String",
          "desc" : "The data value of the item to select",
          "isOptional" : false
        },
        {
          "name" : "scrollIntoView",
          "type" : "Boolean",
          "desc" : "False to prevent the dropdown list from autoscrolling to display the\nselected item if it is not currently in view (defaults to true)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the value matched an item in the list, else false"
        }
      ]
    },
    {
      "name" : "isExpanded",
      "type" : "function",
      "desc" : "Returns true if the dropdown list is expanded, else false.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "getValue",
      "type" : "function",
      "desc" : "Returns the currently selected field value or empty string if no value is set.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "value The selected value"
        }
      ]
    },
    {
      "name" : "setFromData",
      "type" : "function",
      "desc" : "Sets the value of the field based on a object which is related to the record format for the store.",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "Object",
          "desc" : "the value to set as. or false on reset?",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setValue",
      "type" : "function",
      "desc" : "Sets the specified value into the field.  If the value finds a match, the corresponding record text\nwill be displayed in the field.  If the value does not match the data value of an existing item,\nand the valueNotFoundText config option is defined, it will be displayed as the default field text.\nOtherwise the field will be blank (although the value will still be set).",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "String",
          "desc" : "The value to match",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setWidth",
      "type" : "function",
      "desc" : "",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setEditable",
      "type" : "function",
      "desc" : "Allow or prevent the user from directly editing the field text.  If false is passed,\nthe user will only be able to select from the items defined in the dropdown list.  This method\nis the runtime equivalent of setting the 'editable' config option at config time.",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "Boolean",
          "desc" : "True to allow the user to directly edit the field text",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "doQuery",
      "type" : "function",
      "desc" : "Execute a query to filter the dropdown list.  Fires the beforequery event prior to performing the\nquery allowing the query action to be canceled if needed.",
      "sig" : "(query, forceAll)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "query",
          "type" : "String",
          "desc" : "The SQL query to execute",
          "isOptional" : false
        },
        {
          "name" : "forceAll",
          "type" : "Boolean",
          "desc" : "True to force the query to execute even if there are currently fewer characters\nin the field than the minimum specified by the minChars config option.  It also clears any filter previously\nsaved in the current store (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "expand",
      "type" : "function",
      "desc" : "Expands the dropdown list if it is currently hidden. Fires the 'expand' event on completion.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "onTriggerClick",
      "type" : "function",
      "desc" : "The function that should handle the trigger's click event.  This method does nothing by default until overridden\nby an implementing function.",
      "sig" : "(e)",
      "static" : false,
      "memberOf" : "Roo.form.TriggerField",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "e",
          "type" : "EventObject",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "autoSize",
      "type" : "function",
      "desc" : "",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.TriggerField",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "selectText",
      "type" : "function",
      "desc" : "Selects text in this field",
      "sig" : "(start, end)",
      "static" : false,
      "memberOf" : "Roo.form.TextField",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "start",
          "type" : "Number",
          "desc" : "(optional) The index where the selection should start (defaults to 0)",
          "isOptional" : false
        },
        {
          "name" : "end",
          "type" : "Number",
          "desc" : "(optional) The index where the selection should end (defaults to the text length)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "validateValue",
      "type" : "function",
      "desc" : "Validates a value according to the field's validation rules and marks the field as invalid\nif the validation fails",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "Roo.form.TextField",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "Mixed",
          "desc" : "The value to validate",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the value is valid, else false"
        }
      ]
    },
    {
      "name" : "reset",
      "type" : "function",
      "desc" : "Resets the current field value to the originally-loaded value and clears any validation messages.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.TextField",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "validate",
      "type" : "function",
      "desc" : "Validates the field value",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the value is valid, else false"
        }
      ]
    },
    {
      "name" : "getName",
      "type" : "function",
      "desc" : "Returns the name attribute of the field if available",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : "name The field name"
        }
      ]
    },
    {
      "name" : "markInvalid",
      "type" : "function",
      "desc" : "Mark this field as invalid",
      "sig" : "(msg)",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "msg",
          "type" : "String",
          "desc" : "The validation message",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getRawValue",
      "type" : "function",
      "desc" : "Returns the raw data value which may or may not be a valid, defined value.  To return a normalized value see {@link #getValue}.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Mixed",
          "desc" : "value The field value"
        }
      ]
    },
    {
      "name" : "applyTo",
      "type" : "function",
      "desc" : "Apply the behaviors of this component to an existing element. <b>This is used instead of render().</b>",
      "sig" : "(el)",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "el",
          "type" : "String/HTMLElement/Element",
          "desc" : "The id of the node, a DOM node or an existing Element",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.form.Field",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "resetHasChanged",
      "type" : "function",
      "desc" : "stores the current value in loadedValue",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "isDirty",
      "type" : "function",
      "desc" : "Returns true if this field has been changed since it was originally loaded and is not disabled.\nDEPRICATED  - it never worked well - use hasChanged/resetHasChanged.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setRawValue",
      "type" : "function",
      "desc" : "Sets the underlying DOM field's value directly, bypassing validation.  To set the value with validation see {@link #setValue}.",
      "sig" : "(value)",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "value",
          "type" : "Mixed",
          "desc" : "The value to set",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "clearInvalid",
      "type" : "function",
      "desc" : "Clear any invalid styles/messages for this field",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "isValid",
      "type" : "function",
      "desc" : "Returns whether or not the field value is currently valid",
      "sig" : "(preventMark)",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "preventMark",
          "type" : "Boolean",
          "desc" : "True to disable marking the field invalid",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the value is valid, else false"
        }
      ]
    },
    {
      "name" : "hasChanged",
      "type" : "function",
      "desc" : "checks the current value against the 'loaded' value.\nNote - will return false if 'resetHasChanged' has not been called first.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.form.Field",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "updateBox",
      "type" : "function",
      "desc" : "Sets the current box measurements of the component's underlying element.",
      "sig" : "(box)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "box",
          "type" : "Object",
          "desc" : "An object in the format {x, y, width, height}",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setPagePosition",
      "type" : "function",
      "desc" : "Sets the page XY position of the component.  To set the left and top instead, use {@link #setPosition}.\nThis method fires the move event.",
      "sig" : "(x, y)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "The new x position",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "The new y position",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "syncSize",
      "type" : "function",
      "desc" : "Force the component's size to recalculate based on the underlying element's current height and width.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setSize",
      "type" : "function",
      "desc" : "Sets the width and height of the component.  This method fires the resize event.  This method can accept\neither width and height as separate numeric arguments, or you can pass a size object like {width:10, height:20}.",
      "sig" : "(width, height)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "width",
          "type" : "Number/Object",
          "desc" : "The new width to set, or a size object in the format {width, height}",
          "isOptional" : false
        },
        {
          "name" : "height",
          "type" : "Number",
          "desc" : "The new height to set (not required if a size object is passed as the first arg)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.BoxComponent",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getPosition",
      "type" : "function",
      "desc" : "Gets the current XY position of the component's underlying element.",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "(optional) If true the element's left and top are returned instead of page XY (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Array",
          "desc" : "The XY position of the element (e.g., [100, 200])"
        }
      ]
    },
    {
      "name" : "onResize",
      "type" : "function",
      "desc" : "Called after the component is resized, this method is empty by default but can be implemented by any\nsubclass that needs to perform custom logic after a resize occurs.",
      "sig" : "(adjWidth, adjHeight, rawWidth, rawHeight)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "adjWidth",
          "type" : "Number",
          "desc" : "The box-adjusted width that was set",
          "isOptional" : false
        },
        {
          "name" : "adjHeight",
          "type" : "Number",
          "desc" : "The box-adjusted height that was set",
          "isOptional" : false
        },
        {
          "name" : "rawWidth",
          "type" : "Number",
          "desc" : "The width that was originally specified",
          "isOptional" : false
        },
        {
          "name" : "rawHeight",
          "type" : "Number",
          "desc" : "The height that was originally specified",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getBox",
      "type" : "function",
      "desc" : "Gets the current box measurements of the component's underlying element.",
      "sig" : "(local)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "local",
          "type" : "Boolean",
          "desc" : "(optional) If true the element's left and top are returned instead of page XY (defaults to false)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getSize",
      "type" : "function",
      "desc" : "Gets the current size of the component's underlying element.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Object",
          "desc" : "An object containing the element's size {width: (element width), height: (element height)}"
        }
      ]
    },
    {
      "name" : "onPosition",
      "type" : "function",
      "desc" : "Called after the component is moved, this method is empty by default but can be implemented by any\nsubclass that needs to perform custom logic after a move occurs.",
      "sig" : "(x, y)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "The new x position",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "The new y position",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "setPosition",
      "type" : "function",
      "desc" : "Sets the left and top of the component.  To set the page XY position instead, use {@link #setPagePosition}.\nThis method fires the move event.",
      "sig" : "(left, top)",
      "static" : false,
      "memberOf" : "Roo.BoxComponent",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "left",
          "type" : "Number",
          "desc" : "The new left",
          "isOptional" : false
        },
        {
          "name" : "top",
          "type" : "Number",
          "desc" : "The new top",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "getId",
      "type" : "function",
      "desc" : "Returns the id of this component.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "String",
          "desc" : ""
        }
      ]
    },
    {
      "name" : "render",
      "type" : "function",
      "desc" : "If this is a lazy rendering component, render it to its container element.",
      "sig" : "(container)",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "container",
          "type" : "String/HTMLElement/Element",
          "desc" : "(optional) The element this component should be rendered into. If it is being applied to existing markup, this should be left off.",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "destroy",
      "type" : "function",
      "desc" : "Destroys this component by purging any event listeners, removing the component's element from the DOM,\nremoving the component from its {@link Roo.Container} (if applicable) and unregistering it from {@link Roo.ComponentMgr}.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "isVisible",
      "type" : "function",
      "desc" : "Returns true if this component is visible.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "setDisabled",
      "type" : "function",
      "desc" : "Convenience function for setting disabled/enabled by boolean.",
      "sig" : "(disabled)",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "disabled",
          "type" : "Boolean",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "hide",
      "type" : "function",
      "desc" : "Hide this component.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "focus",
      "type" : "function",
      "desc" : "Try to focus this component.",
      "sig" : "(selectText)",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "selectText",
          "type" : "Boolean",
          "desc" : "True to also select the text in this component (if applicable)",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "show",
      "type" : "function",
      "desc" : "Show this component.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "enable",
      "type" : "function",
      "desc" : "Enable this component.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "setVisible",
      "type" : "function",
      "desc" : "Convenience function to hide or show this component by boolean.",
      "sig" : "(visible)",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "visible",
          "type" : "Boolean",
          "desc" : "True to show, false to hide",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "disable",
      "type" : "function",
      "desc" : "Disable this component.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Component",
          "desc" : "this"
        }
      ]
    },
    {
      "name" : "getEl",
      "type" : "function",
      "desc" : "Returns the underlying {@link Roo.Element}.",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.Component",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : [
        {
          "name" : "",
          "type" : "Roo.Element",
          "desc" : "The element"
        }
      ]
    },
    {
      "name" : "purgeListeners",
      "type" : "function",
      "desc" : "Removes all listeners for this object",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    },
    {
      "name" : "on",
      "type" : "function",
      "desc" : "Appends an event handler to this element (shorthand for addListener)",
      "sig" : "(eventName, handler, scope, options)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional)",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "un",
      "type" : "function",
      "desc" : "Removes a listener (shorthand for removeListener)",
      "sig" : "(eventName, handler, scope)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addEvents",
      "type" : "function",
      "desc" : "Used to define events on this Observable",
      "sig" : "(object)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "object",
          "type" : "Object",
          "desc" : "The object with the events defined",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "releaseCapture",
      "type" : "function",
      "desc" : "Removes <b>all</b> added captures from the Observable.",
      "sig" : "(o)",
      "static" : true,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to release",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "removeListener",
      "type" : "function",
      "desc" : "Removes a listener",
      "sig" : "(eventName, handler, scope)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The handler to remove",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the handler",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "fireEvent",
      "type" : "function",
      "desc" : "Fires the specified event with the passed parameters (minus the event name).",
      "sig" : "(eventName, args)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "args",
          "type" : "Object...",
          "desc" : "Variable number of parameters are passed to handlers",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "returns false if any of the handlers return false otherwise it returns true"
        }
      ]
    },
    {
      "name" : "hasListener",
      "type" : "function",
      "desc" : "Checks to see if this object has any listeners for a specified event",
      "sig" : "(eventName)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The name of the event to check for",
          "isOptional" : false
        }
      ],
      "returns" : [
        {
          "name" : "",
          "type" : "Boolean",
          "desc" : "True if the event is being listened for, else false"
        }
      ]
    },
    {
      "name" : "capture",
      "type" : "function",
      "desc" : "Starts capture on the specified Observable. All events will be passed\nto the supplied function with the event name + standard signature of the event\n<b>before</b> the event is fired. If the supplied function returns false,\nthe event will not fire.",
      "sig" : "(o, fn, scope)",
      "static" : true,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : true,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Observable",
          "desc" : "The Observable to capture",
          "isOptional" : false
        },
        {
          "name" : "fn",
          "type" : "Function",
          "desc" : "The function to call",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope (this object) for the fn",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "addListener",
      "type" : "function",
      "desc" : "Appends an event handler to this component",
      "sig" : "(eventName, handler, scope, options)",
      "static" : false,
      "memberOf" : "Roo.util.Observable",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "eventName",
          "type" : "String",
          "desc" : "The type of event to listen for",
          "isOptional" : false
        },
        {
          "name" : "handler",
          "type" : "Function",
          "desc" : "The method the event invokes",
          "isOptional" : false
        },
        {
          "name" : "scope",
          "type" : "Object",
          "desc" : "(optional) The scope in which to execute the handler\nfunction. The handler function's \"this\" context.",
          "isOptional" : false
        },
        {
          "name" : "options",
          "type" : "Object",
          "desc" : "(optional) An object containing handler configuration\nproperties. This may contain any of the following properties:<ul>\n<li>scope {Object} The scope in which to execute the handler function. The handler function's \"this\" context.</li>\n<li>delay {Number} The number of milliseconds to delay the invocation of the handler after te event fires.</li>\n<li>single {Boolean} True to add a handler to handle just the next firing of the event, and then remove itself.</li>\n<li>buffer {Number} Causes the handler to be scheduled to run in an {@link Roo.util.DelayedTask} delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</li>\n</ul><br>\n<p>\n<b>Combining Options</b><br>\nUsing the options argument, it is possible to combine different types of listeners:<br>\n<br>\nA normalized, delayed, one-time listener that auto stops the event and passes a custom argument (forumId)\n\t\t<pre><code>\n\t\tel.on('click', this.onClick, this, {\n \t\t\tsingle: true,\n    \t\tdelay: 100,\n    \t\tforumId: 4\n\t\t});\n\t\t</code></pre>\n<p>\n<b>Attaching multiple handlers in 1 call</b><br>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.\n<pre><code>\n\t\tel.on({\n\t\t\t'click': {\n        \t\tfn: this.onClick,\n        \t\tscope: this,\n        \t\tdelay: 100\n    \t\t}, \n    \t\t'mouseover': {\n        \t\tfn: this.onMouseOver,\n        \t\tscope: this\n    \t\t},\n    \t\t'mouseout': {\n        \t\tfn: this.onMouseOut,\n        \t\tscope: this\n    \t\t}\n\t\t});\n\t\t</code></pre>\n<p>\nOr a shorthand syntax which passes the same scope object to all handlers:\n     \t<pre><code>\n\t\tel.on({\n\t\t\t'click': this.onClick,\n    \t\t'mouseover': this.onMouseOver,\n    \t\t'mouseout': this.onMouseOut,\n    \t\tscope: this\n\t\t});\n\t\t</code></pre>",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ],
  "events" : [
    {
      "name" : "autosize",
      "type" : "function",
      "desc" : "Fires when the autosize function is triggered.  The field may or may not have actually changed size\naccording to the default logic, but this event provides a hook for the developer to apply additional\nlogic at runtime to resize the field if needed.",
      "sig" : "function (_self, width)\n{\n\n}",
      "memberOf" : "Roo.form.TextField",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "This text field",
          "isOptional" : false
        },
        {
          "name" : "width",
          "type" : "Number",
          "desc" : "The new field width",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "blur",
      "type" : "function",
      "desc" : "Fires when this field loses input focus.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "valid",
      "type" : "function",
      "desc" : "Fires after the field has been validated with no errors.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "specialkey",
      "type" : "function",
      "desc" : "Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.  You can check\n{@link Roo.EventObject#getKey} to determine which key was pressed.",
      "sig" : "function (_self, e)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "The event object",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "focus",
      "type" : "function",
      "desc" : "Fires when this field receives input focus.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "keyup",
      "type" : "function",
      "desc" : "Fires after the key up",
      "sig" : "function (_self, e)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "e",
          "type" : "Roo.EventObject",
          "desc" : "The event Object",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "invalid",
      "type" : "function",
      "desc" : "Fires after the field has been marked as invalid.",
      "sig" : "function (_self, msg)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "msg",
          "type" : "String",
          "desc" : "The validation message",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "change",
      "type" : "function",
      "desc" : "Fires just before the field blurs if the field value has changed.",
      "sig" : "function (_self, newValue, oldValue)\n{\n\n}",
      "memberOf" : "Roo.form.Field",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.form.Field",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "newValue",
          "type" : "Mixed",
          "desc" : "The new value",
          "isOptional" : false
        },
        {
          "name" : "oldValue",
          "type" : "Mixed",
          "desc" : "The original value",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "move",
      "type" : "function",
      "desc" : "Fires after the component is moved.",
      "sig" : "function (_self, x, y)\n{\n\n}",
      "memberOf" : "Roo.BoxComponent",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "x",
          "type" : "Number",
          "desc" : "The new x position",
          "isOptional" : false
        },
        {
          "name" : "y",
          "type" : "Number",
          "desc" : "The new y position",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "resize",
      "type" : "function",
      "desc" : "Fires after the component is resized.",
      "sig" : "function (_self, adjWidth, adjHeight, rawWidth, rawHeight)\n{\n\n}",
      "memberOf" : "Roo.BoxComponent",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        },
        {
          "name" : "adjWidth",
          "type" : "Number",
          "desc" : "The box-adjusted width that was set",
          "isOptional" : false
        },
        {
          "name" : "adjHeight",
          "type" : "Number",
          "desc" : "The box-adjusted height that was set",
          "isOptional" : false
        },
        {
          "name" : "rawWidth",
          "type" : "Number",
          "desc" : "The width that was originally specified",
          "isOptional" : false
        },
        {
          "name" : "rawHeight",
          "type" : "Number",
          "desc" : "The height that was originally specified",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforerender",
      "type" : "function",
      "desc" : "Fires before the component is rendered. Return false to stop the render.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "disable",
      "type" : "function",
      "desc" : "Fires after the component is disabled.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "render",
      "type" : "function",
      "desc" : "Fires after the component is rendered.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "destroy",
      "type" : "function",
      "desc" : "Fires after the component is destroyed.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "hide",
      "type" : "function",
      "desc" : "Fires after the component is hidden.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforehide",
      "type" : "function",
      "desc" : "Fires before the component is hidden. Return false to stop the hide.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "show",
      "type" : "function",
      "desc" : "Fires after the component is shown.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforeshow",
      "type" : "function",
      "desc" : "Fires before the component is shown.  Return false to stop the show.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "enable",
      "type" : "function",
      "desc" : "Fires after the component is enabled.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "beforedestroy",
      "type" : "function",
      "desc" : "Fires before the component is destroyed. Return false to stop the destroy.",
      "sig" : "function (_self)\n{\n\n}",
      "memberOf" : "Roo.Component",
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "params" : [
        {
          "name" : "this",
          "type" : "Roo.Component",
          "desc" : "",
          "isOptional" : false
        }
      ],
      "returns" : []
    }
  ]
}