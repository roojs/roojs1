{
  "name" : "Roo.util.DelayedTask",
  "augments" : [],
  "childClasses" : {  },
  "tree_children" : [],
  "tree_parent" : [],
  "desc" : "Provides a convenient method of performing setTimeout where a new\ntimeout cancels the old timeout. An example would be performing validation on a keypress.\nYou can use this class to buffer\nthe keypress events for a certain number of milliseconds, and perform only if they stop\nfor that amount of time.",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "isAbstract" : false,
  "isBuilderTop" : false,
  "memberOf" : "DelayedTask",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "fn",
      "type" : "Function",
      "desc" : "(optional) The default function to timeout",
      "isOptional" : false
    },
    {
      "name" : "scope",
      "type" : "Object",
      "desc" : "(optional) The default scope of that timeout",
      "isOptional" : false
    },
    {
      "name" : "args",
      "type" : "Array",
      "desc" : "(optional) The default Array of arguments",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [],
  "methods" : [
    {
      "name" : "delay",
      "type" : "function",
      "desc" : "Cancels any pending timeout and queues a new one",
      "sig" : "(delay, newFn, newScope, newArgs)",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [
        {
          "name" : "delay",
          "type" : "Number",
          "desc" : "The milliseconds to delay",
          "isOptional" : false
        },
        {
          "name" : "newFn",
          "type" : "Function",
          "desc" : "(optional) Overrides function passed to constructor",
          "isOptional" : false
        },
        {
          "name" : "newScope",
          "type" : "Object",
          "desc" : "(optional) Overrides scope passed to constructor",
          "isOptional" : false
        },
        {
          "name" : "newArgs",
          "type" : "Array",
          "desc" : "(optional) Overrides args passed to constructor",
          "isOptional" : false
        }
      ],
      "returns" : []
    },
    {
      "name" : "cancel",
      "type" : "function",
      "desc" : "Cancel the last queued timeout",
      "sig" : "()\n{\n\n}",
      "static" : false,
      "memberOf" : "",
      "isStatic" : false,
      "isConstructor" : false,
      "isPrivate" : false,
      "example" : "",
      "deprecated" : "",
      "since" : "",
      "see" : "",
      "exceptions" : "",
      "requires" : "",
      "params" : [],
      "returns" : []
    }
  ],
  "events" : []
}