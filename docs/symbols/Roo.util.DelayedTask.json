{
  "name" : "Roo.util.DelayedTask",
  "augments" : [],
  "desc" : "Provides a convenient method of performing setTimeout where a new\ntimeout cancels the old timeout. An example would be performing validation on a keypress.\nYou can use this class to buffer\nthe keypress events for a certain number of milliseconds, and perform only if they stop\nfor that amount of time.",
  "isSingleton" : false,
  "isStatic" : false,
  "isBuiltin" : false,
  "memberOf" : "DelayedTask",
  "example" : "",
  "deprecated" : "",
  "since" : "",
  "see" : "",
  "params" : [
    {
      "name" : "fn",
      "type" : "Function",
      "desc" : "(optional) The default function to timeout",
      "isOptional" : false
    },
    {
      "name" : "scope",
      "type" : "Object",
      "desc" : "(optional) The default scope of that timeout",
      "isOptional" : false
    },
    {
      "name" : "args",
      "type" : "Array",
      "desc" : "(optional) The default Array of arguments",
      "isOptional" : false
    }
  ],
  "returns" : [],
  "throws" : "",
  "requires" : "",
  "config" : [],
  "methods" : [],
  "events" : []
}