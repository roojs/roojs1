{
  "name" : "Roo.data.ArrayReader",
  "augments" : [
    "Roo.data.DataReader"
  ],
  "desc" : "Data reader class to create an Array of Roo.data.Record objects from an Array.\nEach element of that Array represents a row of data fields. The\nfields are pulled into a Record object using as a subscript, the <em>mapping</em> property\nof the field definition if it exists, or the field's ordinal position in the definition.<br>\n<p>\nExample code:.\n<pre><code>\nvar RecordDef = Roo.data.Record.create([\n    {name: 'name', mapping: 1},         // \"mapping\" only needed if an \"id\" field is present which\n    {name: 'occupation', mapping: 2}    // precludes using the ordinal position as the index.\n]);\nvar myReader = new Roo.data.ArrayReader({\n    id: 0                     // The subscript within row Array that provides an ID for the Record (optional)\n}, RecordDef);\n</code></pre>\n<p>\nThis would consume an Array like this:\n<pre><code>\n[ [1, 'Bill', 'Gardener'], [2, 'Ben', 'Horticulturalist'] ]\n  </code></pre>",
  "config" : [
    {
      "name" : "id",
      "type" : "String",
      "desc" : "(optional) The subscript within row Array that provides an ID for the Record",
      "memberOf" : ""
    }
  ],
  "methods" : [
    {
      "name" : "readRecords",
      "desc" : "Create a data block containing Roo.data.Records from an XML document.",
      "static" : false,
      "constructor" : false,
      "memberOf" : "",
      "params" : [
        {
          "name" : "o",
          "type" : "Object",
          "desc" : "An Array of row objects which represents the dataset."
        }
      ],
      "returns" : "Object"
    },
    {
      "name" : "newRow",
      "desc" : "Create an empty record",
      "static" : false,
      "constructor" : false,
      "memberOf" : "Roo.data.DataReader",
      "params" : [
        {
          "name" : "data",
          "type" : "Object",
          "desc" : "(optional) - overlay some values"
        }
      ],
      "returns" : "Roo.data.Record"
    }
  ],
  "events" : [
  ]
}